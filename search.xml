<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>博客域名开发公告</title>
      <link href="//post/%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E5%BC%80%E5%8F%91%E5%85%AC%E5%91%8A.html"/>
      <url>//post/%E5%8D%9A%E5%AE%A2%E5%9F%9F%E5%90%8D%E5%BC%80%E5%8F%91%E5%85%AC%E5%91%8A.html</url>
      
        <content type="html"><![CDATA[<h1 id="所有的访问者们"><a href="#所有的访问者们" class="headerlink" title="所有的访问者们"></a>所有的访问者们</h1><h2 id="本人的博客已开发多个接口"><a href="#本人的博客已开发多个接口" class="headerlink" title="本人的博客已开发多个接口"></a>本人的博客已开发多个接口</h2><h3 id="之后也会继续开发更好的接口"><a href="#之后也会继续开发更好的接口" class="headerlink" title="之后也会继续开发更好的接口!"></a>之后也会继续开发更好的接口!</h3><p>详细说明:</p><table><thead><tr><th align="center">名称</th><th align="center"><a href="https://minecraftsep.github.io/">Github</a></th><th align="center"><a href="https://minecraftsep.gitee.io/">Gitee</a></th><th align="center"><a href="https://minecraftsep.codeberg.page/">Codeberg</a></th><th align="center"><a href="https://minecraftsep-github-io.vercel.app/">Vercel</a></th><th align="center"><a href="https://minecraftsep.pages.dev/">CloudFlare</a></th></tr></thead><tbody><tr><td align="center"><strong>推荐访问指数</strong></td><td align="center">👍👍👍👍</td><td align="center">👍👍</td><td align="center">👍👍👍👍</td><td align="center">👍</td><td align="center">👍👍👍👍</td></tr><tr><td align="center">启动时间(完全加载完毕)</td><td align="center">约25s</td><td align="center">&#x2F;</td><td align="center">约15s</td><td align="center">超时</td><td align="center">约8s</td></tr><tr><td align="center">更新频率</td><td align="center">约1days&#x2F;次</td><td align="center">&#x2F;</td><td align="center">约2~5days&#x2F;次</td><td align="center">约1days&#x2F;次</td><td align="center">约2~5days&#x2F;次</td></tr><tr><td align="center">是否需要加速器</td><td align="center">建议需要</td><td align="center">&#x2F;</td><td align="center">不需要</td><td align="center">需要</td><td align="center">不需要</td></tr><tr><td align="center">Bug</td><td align="center">0</td><td align="center">&#x2F;</td><td align="center">0</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">是否完善</td><td align="center">是</td><td align="center">&#x2F;</td><td align="center">是</td><td align="center">否</td><td align="center">是</td></tr><tr><td align="center">Pages完成度</td><td align="center">100%</td><td align="center">&#x2F;</td><td align="center">100%</td><td align="center">98.3%</td><td align="center">100%</td></tr><tr><td align="center">是否免费</td><td align="center">是</td><td align="center">&#x2F;</td><td align="center">是</td><td align="center">是</td><td align="center">是</td></tr><tr><td align="center">备注</td><td align="center">&#x2F;</td><td align="center">未开放</td><td align="center">&#x2F;</td><td align="center"><a href="https://zhuanlan.zhihu.com/p/660865097">访问方法</a></td><td align="center">&#x2F;</td></tr></tbody></table><p>兄弟们根据需要访问把，反正我是看好Github Pages和cloudflare的👍</p><h2 id="2024-4-21gen更新"><a href="#2024-4-21gen更新" class="headerlink" title="2024&#x2F;4&#x2F;21gen更新"></a>2024&#x2F;4&#x2F;21gen更新</h2>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-04-12竞赛笔记</title>
      <link href="//post/2024-04-12%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-04-12%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-4-12"><a href="#2024-4-12" class="headerlink" title="2024&#x2F;4&#x2F;12"></a>2024&#x2F;4&#x2F;12</h1><h2 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h2><h3 id="最长上升子序列"><a href="#最长上升子序列" class="headerlink" title="最长上升子序列"></a>最长上升子序列</h3><p><img src="https://s21.ax1x.com/2024/04/12/pFjVGH1.jpg"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100001</span>],f[<span class="number">100001</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n,ans;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">f[i]=<span class="number">1</span>;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;a[j])&#123;</span><br><span class="line">f[i]=<span class="built_in">max</span>(f[i],f[j]+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">ans=<span class="built_in">max</span>(ans,f[i]);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="T1-P1853-投资的最大效益"><a href="#T1-P1853-投资的最大效益" class="headerlink" title="T1 P1853 投资的最大效益"></a>T1 P1853 投资的最大效益</h3><p><img src="https://s21.ax1x.com/2024/04/12/pFjPNh4.jpg" alt="pFjPNh4.jpg"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> k<span class="comment">/*总共消耗的邮票数*/</span>,n,s; </span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">2e6</span>,M=<span class="number">1e2</span>,INF=<span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">int</span> a[M],f[N];<span class="comment">//f[i]表示构成面值为i至少需要的you票数 </span></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;k&gt;&gt;n;</span><br><span class="line"><span class="built_in">memset</span>(f,INF,<span class="built_in">sizeof</span>(f));</span><br><span class="line">f[<span class="number">0</span>]=<span class="number">0</span>;<span class="comment">//初始值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=a[i];j&lt;=N;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(f[j-a[i]]+<span class="number">1</span>&lt;=k)&#123;<span class="comment">//在限制使用的范围内 </span></span><br><span class="line">f[j]=<span class="built_in">min</span>(f[j],f[j-a[i]]+<span class="number">1</span>);<span class="comment">//min的 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">s=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=N;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(f[i]==INF)&#123; <span class="comment">//找不出了 </span></span><br><span class="line">s=i<span class="number">-1</span>;<span class="comment">//记录 </span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s21.ax1x.com/2024/04/12/pFjP8BV.jpg" alt="pFjP8BV.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-04-12周赛总结笔记</title>
      <link href="//post/2024-04-12%E5%91%A8%E8%B5%9B%E6%80%BB%E7%BB%93%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-04-12%E5%91%A8%E8%B5%9B%E6%80%BB%E7%BB%93%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="4-12周赛总结"><a href="#4-12周赛总结" class="headerlink" title="4.12周赛总结"></a>4.12周赛总结</h1><h2 id="总叙"><a href="#总叙" class="headerlink" title="总叙"></a>总叙</h2><p>难度$\color{orange}适中$，但是我发挥的不好，主要还是<strong>模版没记牢</strong></p><h2 id="T1-B3635-硬币问题"><a href="#T1-B3635-硬币问题" class="headerlink" title="T1 B3635 硬币问题"></a>T1 B3635 硬币问题</h2><h3 id="题目链接-这里"><a href="#题目链接-这里" class="headerlink" title="题目链接:这里"></a>题目链接:<a href="https://www.luogu.com.cn/problem/B3635">这里</a></h3><h3 id="考点："><a href="#考点：" class="headerlink" title="考点："></a>考点：</h3><p>动态规划,dp;动态规划初步</p><h3 id="难点"><a href="#难点" class="headerlink" title="难点:"></a>难点:</h3><p>容易与<strong>完全背包</strong>混淆</p><h3 id="比赛时的自己的思路-想法"><a href="#比赛时的自己的思路-想法" class="headerlink" title="比赛时的自己的思路&#x2F;想法"></a>比赛时的自己的思路&#x2F;想法</h3><p>用完全背包一个个去凑，凑出n</p><h3 id="是否AC，若没有，错在哪里了"><a href="#是否AC，若没有，错在哪里了" class="headerlink" title="是否AC，若没有，错在哪里了"></a>是否AC，若没有，错在哪里了</h3><p>NO!整道题都理解错了，根本不是背包问题，普通的DP就可以（<del>我是傻子</del>）</p><h3 id="正确思路"><a href="#正确思路" class="headerlink" title="正确思路"></a>正确思路</h3><p><img src="https://s21.ax1x.com/2024/04/15/pFv58Re.jpg"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll dp[<span class="number">1000001</span>],a[<span class="number">3</span>]=&#123;<span class="number">1</span>,<span class="number">5</span>,<span class="number">11</span>&#125;;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="built_in">memset</span>(dp,<span class="number">1145141919810</span>,<span class="built_in">sizeof</span>(dp));</span><br><span class="line">dp[<span class="number">0</span>]=<span class="number">0</span>;<span class="comment">//边界 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=a[i];j&lt;=n;j++)&#123;</span><br><span class="line">dp[j]=<span class="built_in">min</span>(dp[j],dp[j-a[i]]+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;dp[n];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T2-P1510-精卫填海"><a href="#T2-P1510-精卫填海" class="headerlink" title="T2 P1510 精卫填海"></a>T2 P1510 精卫填海</h3><h3 id="题目链接-这里-1"><a href="#题目链接-这里-1" class="headerlink" title="题目链接:这里"></a>题目链接:<a href="https://www.luogu.com.cn/problem/P1510">这里</a></h3><h3 id="考点：-1"><a href="#考点：-1" class="headerlink" title="考点："></a>考点：</h3><p>模拟;动态规划,dp;背包</p><h3 id="难点-1"><a href="#难点-1" class="headerlink" title="难点:"></a>难点:</h3><p>几乎没有……</p><h3 id="比赛时的自己的思路-想法-1"><a href="#比赛时的自己的思路-想法-1" class="headerlink" title="比赛时的自己的思路&#x2F;想法"></a>比赛时的自己的思路&#x2F;想法</h3><p>用多重背包去取，直到体力值用光</p><h3 id="是否AC，若没有，错在哪里了-1"><a href="#是否AC，若没有，错在哪里了-1" class="headerlink" title="是否AC，若没有，错在哪里了"></a>是否AC，若没有，错在哪里了</h3><p>NO!背包那一块出现了一点问题（好像是模版不太对，还是思路不对）</p><h3 id="正确思路-1"><a href="#正确思路-1" class="headerlink" title="正确思路"></a>正确思路</h3><p><img src="https://s21.ax1x.com/2024/04/15/pFvoTbR.jpg"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> a[<span class="number">100005</span>],b[<span class="number">100005</span>],f[<span class="number">100005</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> v,n,c;</span><br><span class="line">cin&gt;&gt;v&gt;&gt;n&gt;&gt;c;</span><br><span class="line">f[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin&gt;&gt;a[i]&gt;&gt;b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=c-b[i];j&gt;=<span class="number">0</span>;j--)&#123;</span><br><span class="line">f[j+b[i]]=<span class="built_in">max</span>(f[j+b[i]],f[j]+a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=c;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(f[i]&gt;=v)&#123;</span><br><span class="line">cout&lt;&lt;c-i;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;Impossible&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T3-P1833-樱花"><a href="#T3-P1833-樱花" class="headerlink" title="T3 P1833 樱花"></a>T3 P1833 樱花</h3><h3 id="题目链接-这里-2"><a href="#题目链接-这里-2" class="headerlink" title="题目链接:这里"></a>题目链接:<a href="https://www.luogu.com.cn/problem/P1833">这里</a></h3><h3 id="考点：-2"><a href="#考点：-2" class="headerlink" title="考点："></a>考点：</h3><p>动态规划,dp;背包</p><h3 id="难点-2"><a href="#难点-2" class="headerlink" title="难点:"></a>难点:</h3><p>计算时间，其他几乎没有……</p><h3 id="比赛时的自己的思路-想法-2"><a href="#比赛时的自己的思路-想法-2" class="headerlink" title="比赛时的自己的思路&#x2F;想法"></a>比赛时的自己的思路&#x2F;想法</h3><p>用多重背包去取，直到体力值用光</p><h3 id="是否AC，若没有，错在哪里了-2"><a href="#是否AC，若没有，错在哪里了-2" class="headerlink" title="是否AC，若没有，错在哪里了"></a>是否AC，若没有，错在哪里了</h3><p>NO!最后几分钟写不完了……</p><h3 id="正确思路-2"><a href="#正确思路-2" class="headerlink" title="正确思路"></a>正确思路</h3><p><img src="https://img.zshfoj.com/891f8fbf6f6ed8c70d63bfb4f41d342693bbdd75ff8101604953bddd7a849f27.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e4</span>+<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> n,m,w[<span class="number">6</span>*N],v[<span class="number">6</span>*N],s[<span class="number">6</span>*N],len,dp[<span class="number">1005</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> x1,x2,y1,y2;<span class="comment">//x1:x2 y1:y2</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d:%d %d:%d %d&quot;</span>,&amp;x1,&amp;x2,&amp;y1,&amp;y2,&amp;n);</span><br><span class="line">m=(y1-x1)*<span class="number">60</span>+(y2-x2);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="type">int</span> a,b,c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line"><span class="keyword">if</span>(c==<span class="number">0</span>)&#123;</span><br><span class="line">w[++len]=a;</span><br><span class="line">v[len]=b;</span><br><span class="line">s[len]=c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=c;j&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">w[++len]=a*j;</span><br><span class="line">v[len]=b*j;</span><br><span class="line">s[len]=j;</span><br><span class="line">c-=j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(c&gt;<span class="number">0</span>)&#123;</span><br><span class="line">w[++len]=a*c;</span><br><span class="line">v[len]=b*c;</span><br><span class="line">s[len]=c;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=len;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i]==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=w[i];j&lt;=m;j++)&#123;</span><br><span class="line">dp[j]=<span class="built_in">max</span>(dp[j],dp[j-w[i]]+v[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=m;j&gt;=w[i];j--)&#123;</span><br><span class="line">dp[j]=<span class="built_in">max</span>(dp[j],dp[j-w[i]]+v[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,dp[m]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T4-P1759通天之潜水"><a href="#T4-P1759通天之潜水" class="headerlink" title="T4 P1759通天之潜水"></a>T4 P1759通天之潜水</h3><h3 id="题目链接-这里-3"><a href="#题目链接-这里-3" class="headerlink" title="题目链接:这里"></a>题目链接:<a href="https://www.luogu.com.cn/problem/P1759">这里</a></h3><h3 id="考点：-3"><a href="#考点：-3" class="headerlink" title="考点："></a>考点：</h3><p>动态规划,dp</p><h3 id="难点-3"><a href="#难点-3" class="headerlink" title="难点:"></a>难点:</h3><p>输出路径</p><h3 id="比赛时的自己的思路-想法-3"><a href="#比赛时的自己的思路-想法-3" class="headerlink" title="比赛时的自己的思路&#x2F;想法"></a>比赛时的自己的思路&#x2F;想法</h3><p>先计算总共可以用多久，计算过程中用<code>s[i][j</code>]记录最后输出</p><h3 id="是否AC，若没有，错在哪里了-3"><a href="#是否AC，若没有，错在哪里了-3" class="headerlink" title="是否AC，若没有，错在哪里了"></a>是否AC，若没有，错在哪里了</h3><p>NO!计算路径那里炸了……</p><h3 id="正确思路-3"><a href="#正确思路-3" class="headerlink" title="正确思路"></a>正确思路</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">10005</span>;</span><br><span class="line"><span class="type">int</span> m,v,n,a[N],b[N],c[N];</span><br><span class="line"><span class="type">int</span> dp[<span class="number">2005</span>][<span class="number">2005</span>],p[<span class="number">2005</span>][<span class="number">2005</span>][<span class="number">105</span>];<span class="comment">//p[][][]保存路径 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fg</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j,<span class="type">int</span> k)</span></span>&#123;<span class="comment">//保存路径函数 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> l=<span class="number">1</span>;l&lt;=p[j-a[i]][k-b[i]][<span class="number">0</span>];l++)</span><br><span class="line">p[j][k][l]=p[j-a[i]][k-b[i]][l];</span><br><span class="line">p[j][k][<span class="number">0</span>]=p[j-a[i]][k-b[i]][<span class="number">0</span>]+<span class="number">1</span>;<span class="comment">//更新路径长度 </span></span><br><span class="line">p[j][k][p[j][k][<span class="number">0</span>]]=i;<span class="comment">//记录编号 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;m,&amp;v,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a[i],&amp;b[i],&amp;c[i]);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=m;j&gt;=a[i];j--)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=v;k&gt;=b[i];k--)&#123;</span><br><span class="line"><span class="keyword">if</span>(dp[j-a[i]][k-b[i]]+c[i]&gt;dp[j][k])&#123;<span class="comment">//比较选与不选的更优值 </span></span><br><span class="line">dp[j][k]=dp[j-a[i]][k-b[i]]+c[i];</span><br><span class="line"><span class="built_in">fg</span>(i,j,k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(dp[j-a[i]][k-b[i]]+c[i]==dp[j][k])&#123;<span class="comment">//正好相等，比较 </span></span><br><span class="line"><span class="type">bool</span> fl=<span class="number">1</span>;</span><br><span class="line">p[j-a[i]][k-b[i]][p[j-a[i]][k-b[i]][<span class="number">0</span>]+<span class="number">1</span>]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> l=<span class="number">1</span>;l&lt;=<span class="built_in">min</span>(p[j-a[i]][k-b[i]][<span class="number">0</span>]+<span class="number">1</span>,p[j][k][<span class="number">0</span>]);l++)&#123;<span class="comment">//取min，更小 </span></span><br><span class="line"><span class="keyword">if</span>(p[j-a[i]][k-b[i]][l]&lt;p[j][k][l])&#123;<span class="comment">//如果更小 </span></span><br><span class="line"><span class="built_in">fg</span>(i,j,k);<span class="comment">//继续找更小的 </span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p[j-a[i]][k-b[i]][l]&gt;p[j][k][l])&#123;<span class="comment">//如果更大 </span></span><br><span class="line">fl=<span class="number">0</span>;<span class="comment">//记录，推出 </span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p[j-a[i]][k-b[i]][<span class="number">0</span>]+<span class="number">1</span>&lt;p[j][k][<span class="number">0</span>]&amp;&amp;fl)&#123;<span class="comment">//再次比较确认是否有结果 </span></span><br><span class="line"><span class="built_in">fg</span>(i,j,k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,dp[m][v]);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=p[m][v][<span class="number">0</span>];i++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p[m][v][i]);<span class="comment">//输出 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.zshfoj.com/c83f6f02aa94d545d29d339c2e74be1fa46a0359da151bc7e229c17853a0e276.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll m,v,n,a[<span class="number">101</span>],b[<span class="number">101</span>],c[<span class="number">101</span>],f[<span class="number">10001</span>][<span class="number">10001</span>];</span><br><span class="line">string s[<span class="number">201</span>][<span class="number">201</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;m&gt;&gt;v&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i]&gt;&gt;b[i]&gt;&gt;c[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=m;j&gt;=a[i];j--)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=v;k&gt;=b[i];k--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(f[j][k]&lt;f[j-a[i]][k-b[i]]+c[i]||(f[j][k]==f[j-a[i]][k-b[i]]+c[i]&amp;&amp;s[j][k]&gt;s[j-a[i]][k-b[i]]+<span class="built_in">char</span>(i)))<span class="comment">//强制转字符</span></span><br><span class="line">&#123;</span><br><span class="line">f[j][k]=f[j-a[i]][k-b[i]]+c[i];</span><br><span class="line">s[j][k]=s[j-a[i]][k-b[i]]+<span class="built_in">char</span>(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;f[m][v]&lt;&lt;endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s[m][v].<span class="built_in">size</span>();i++)</span><br><span class="line">cout&lt;&lt;<span class="built_in">int</span>(s[m][v][i])&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>要好好记录错题，多练习DP有关的题目</p>]]></content>
      
      
      <categories>
          
          <category> 竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 竞赛总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-04-11竞赛笔记</title>
      <link href="//post/2024-04-11%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-04-11%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-4-11"><a href="#2024-4-11" class="headerlink" title="2024&#x2F;4&#x2F;11"></a>2024&#x2F;4&#x2F;11</h1><h2 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h2><h3 id="埃氏筛"><a href="#埃氏筛" class="headerlink" title="埃氏筛"></a>埃氏筛</h3><p><img src="https://s21.ax1x.com/2024/04/11/pFXDzjg.png" alt="pFXDzjg.png"></p><p><img src="https://s21.ax1x.com/2024/04/11/pFXDxgS.jpg" alt="pFXDxgS.jpg"></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="T1-P1832-A-B-Problem（再升级）"><a href="#T1-P1832-A-B-Problem（再升级）" class="headerlink" title="T1 P1832 A+B Problem（再升级）"></a>T1 P1832 A+B Problem（再升级）</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">bool</span> isprime[<span class="number">100001</span>];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> dp[<span class="number">100001</span>],n;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">getprime</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(isprime,<span class="literal">true</span>,<span class="built_in">sizeof</span>(isprime));</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(isprime[i]==<span class="literal">true</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=i*i;j&lt;=n;j+=i)&#123;</span><br><span class="line">isprime[j]=<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">dp[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">getprime</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(isprime[i])&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=i;j&lt;=n;j++)&#123;</span><br><span class="line">dp[j]+=dp[j-i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;dp[n];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="P1853-投资的最大效益"><a href="#P1853-投资的最大效益" class="headerlink" title="P1853 投资的最大效益"></a>P1853 投资的最大效益</h3><p><img src="https://s21.ax1x.com/2024/04/11/pFXroGV.jpg" alt="pFXroGV.jpg"></p><pre><code class="cpp">#include&lt;bits/stdc++.h&gt;using namespace std;const int sss=1e7+5;int dp[sss],a[10001],b[10001];int n,s,d;int main()&#123;    cin&gt;&gt;n&gt;&gt;s&gt;&gt;d;    for(int i=1;i&lt;=d;i++) cin&gt;&gt;a[i]&gt;&gt;b[i];    for(int i=1;i&lt;=n;i++)&#123;        for(int j=1;i&lt;=d;j++)&#123;            for(int k=a[j];k&lt;=s;k++)&#123;                dp[k]=max(dp[k],dp[k-a[j]]+b[j]);             &#125;        &#125;        s+=dp[s];//本金++     &#125;    cout&lt;&lt;s;&#125;```cpp#include&lt;bits/stdc++.h&gt;using namespace std;const int sss=1e7+5;int dp[sss],a[10001],b[10001];int n,s,d;int main()&#123;    cin&gt;&gt;n&gt;&gt;s&gt;&gt;d;    for(int i=1;i&lt;=d;i++) cin&gt;&gt;a[i]&gt;&gt;b[i];    for(int i=1;i&lt;=n;i++)&#123;        for(int j=1;i&lt;=d;j++)&#123;            for(int k=a[j];k&lt;=s;k++)&#123;                dp[k]=max(dp[k],dp[k-a[j]]+b[j]);             &#125;        &#125;        s+=dp[s];//本金++     &#125;    cout&lt;&lt;s;&#125;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-04-10竞赛笔记</title>
      <link href="//post/2024-04-10%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-04-10%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-4-10"><a href="#2024-4-10" class="headerlink" title="2024&#x2F;4&#x2F;10"></a>2024&#x2F;4&#x2F;10</h1><h2 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h2><p>abababbaba</p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="T1-ACW1024-宠物小精灵之收服"><a href="#T1-ACW1024-宠物小精灵之收服" class="headerlink" title="T1 ACW1024  宠物小精灵之收服"></a>T1 ACW1024  宠物小精灵之收服</h3><p>这道题很离谱……ACW上的<a href="https://www.luogu.com.cn/paste/uu9ejcjr">这个</a>代码在YBT过了……</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m,k,cost;</span><br><span class="line"><span class="type">int</span> v[<span class="number">1000001</span>],u[<span class="number">1000001</span>];</span><br><span class="line"><span class="type">int</span> dp[<span class="number">10001</span>][<span class="number">10001</span>];<span class="comment">//前i个精灵，在消耗精灵球不超过n,皮卡丘扣血不超过m时，能获得的最大精灵数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++) cin&gt;&gt;v[i]&gt;&gt;u[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123; <span class="comment">//小精灵</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=n;j&gt;=v[i];j--)&#123; <span class="comment">//消耗精灵球</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k=m<span class="number">-1</span>;k&gt;=u[i];k--)&#123; <span class="comment">//皮卡丘扣血</span></span><br><span class="line">                dp[j][k]=<span class="built_in">max</span>(dp[j][k],dp[j-v[i]][k-u[i]]+<span class="number">1</span>);<span class="comment">//状态转移方程 </span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;dp[n][m<span class="number">-1</span>]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    cost=m; <span class="comment">//初始扣血为t</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=m<span class="number">-1</span>;i++)&#123; <span class="comment">//找到满足最大价值的所有状态里，第二维费用消耗最少的</span></span><br><span class="line">        <span class="keyword">if</span>(dp[n][i]==dp[n][m<span class="number">-1</span>])&#123;</span><br><span class="line">        cost=<span class="built_in">min</span>(cost,i);<span class="comment">//最小 </span></span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;m-cost&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T2-P1802-5-倍经验日"><a href="#T2-P1802-5-倍经验日" class="headerlink" title="T2 P1802 5 倍经验日"></a>T2 P1802 5 倍经验日</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> dp[<span class="number">110000</span>],w[<span class="number">110000</span>],l[<span class="number">110000</span>],u[<span class="number">110000</span>];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;<span class="comment">//好友数，瓶子数 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;l[i]&gt;&gt;w[i]&gt;&gt;u[i];<span class="comment">//lose,win,已经要use的 </span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=m;j&gt;=u[i];j--) dp[j]=<span class="built_in">max</span>(dp[j]+l[i]<span class="comment">/*直接lose*/</span>,dp[j-u[i]]+w[i]<span class="comment">/*打掉瓶子所获得的胜利的经验*/</span>);<span class="comment">//比较win和lose那个n*一点 </span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=u[i]<span class="number">-1</span><span class="comment">/*用不了(不够)的*/</span>;j&gt;=<span class="number">0</span>;j--) dp[j]+=l[i];<span class="comment">//打不过直接die </span></span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="number">5</span>*dp[m]&lt;&lt;endl;<span class="comment">//五倍经验所以*5 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-04-08竞赛笔记</title>
      <link href="//post/2024-04-08%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-04-08%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-4-8"><a href="#2024-4-8" class="headerlink" title="2024&#x2F;4&#x2F;8"></a>2024&#x2F;4&#x2F;8</h1><h2 id="混合背包"><a href="#混合背包" class="headerlink" title="混合背包"></a>混合背包</h2><h3 id="代码框架"><a href="#代码框架" class="headerlink" title="代码框架"></a>代码框架</h3><p><img src="https://s21.ax1x.com/2024/04/08/pFL05Uf.jpg" alt="框架"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> dp[<span class="number">100001</span>],v,n[<span class="number">1000001</span>],vl[<span class="number">1000001</span>],ct[<span class="number">1000001</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">lingyi</span><span class="params">(<span class="type">int</span> cost,<span class="type">int</span> value)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(i=v;i&gt;=cost;i--)&#123;</span><br><span class="line">dp[i]=<span class="built_in">max</span>(dp[i],dp[i-cost]+value);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">wanquan</span><span class="params">(<span class="type">int</span> cost,<span class="type">int</span> value)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(i=cost;i&lt;=v;i++)&#123;</span><br><span class="line">dp[i]=<span class="built_in">max</span>(dp[i],dp[i-cost]+value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">duochong</span><span class="params">(<span class="type">int</span> cost,<span class="type">int</span> value,<span class="type">int</span> num)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line"><span class="keyword">if</span>(num*cost&gt;=v)&#123;<span class="comment">//物品个数随便取，完全背包 </span></span><br><span class="line"><span class="built_in">wanquan</span>(cost,value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">k=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(num&gt;k)&#123;<span class="comment">//二进制优化 </span></span><br><span class="line"><span class="built_in">lingyi</span>(k*cost,k*value);</span><br><span class="line">num-=k;</span><br><span class="line">k*=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">lingyi</span>(num*cost,num*value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> c,m,i;</span><br><span class="line">cin&gt;&gt;c;<span class="comment">//测试数据总数</span></span><br><span class="line"><span class="keyword">while</span>(c--)&#123;</span><br><span class="line">cin&gt;&gt;v&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">cin&gt;&gt;vl[i]&gt;&gt;ct[i]&gt;&gt;n[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="built_in">sizeof</span>(dp));</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="built_in">duochong</span>(vl[i],ct[i],n[i]);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;dp[v]&lt;&lt;endl;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="例一-混合背包-YBT1270"><a href="#例一-混合背包-YBT1270" class="headerlink" title="例一:混合背包(YBT1270)"></a>例一:混合背包(YBT1270)</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> dp[<span class="number">100001</span>],v,n[<span class="number">1000001</span>],vl[<span class="number">1000001</span>],ct[<span class="number">1000001</span>],n1;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">lingyi</span><span class="params">(<span class="type">int</span> cost,<span class="type">int</span> value)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=v;i&gt;=cost;i--)&#123;</span><br><span class="line">dp[i]=<span class="built_in">max</span>(dp[i],dp[i-cost]+value);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">wanquan</span><span class="params">(<span class="type">int</span> cost,<span class="type">int</span> value)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=cost;i&lt;=v;i++)&#123;</span><br><span class="line">dp[i]=<span class="built_in">max</span>(dp[i],dp[i-cost]+value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">duochong</span><span class="params">(<span class="type">int</span> cost,<span class="type">int</span> value,<span class="type">int</span> num)</span></span>&#123;</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line"><span class="keyword">if</span>(num*cost&gt;=v)&#123;<span class="comment">//物品个数随便取，完全背包 </span></span><br><span class="line"><span class="built_in">wanquan</span>(cost,value);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">k=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(num&gt;k)&#123;<span class="comment">//二进制优化 </span></span><br><span class="line"><span class="built_in">lingyi</span>(k*cost,k*value);</span><br><span class="line">num-=k;</span><br><span class="line">k*=<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">lingyi</span>(num*cost,num*value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;v&gt;&gt;n1;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n1;i++) cin&gt;&gt;vl[i]&gt;&gt;ct[i]&gt;&gt;n[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n1;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n[i]==<span class="number">0</span>) <span class="built_in">wanquan</span>(vl[i],ct[i]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n[i]==<span class="number">1</span>) <span class="built_in">lingyi</span>(vl[i],ct[i]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(n[i]&gt;<span class="number">1</span>) <span class="built_in">duochong</span>(vl[i],ct[i],n[i]);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;dp[v];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.zshfoj.com/d07cd7a2d648a5073aaf450b2996db1bbc3ea9c9231fa4cc05a85ec99d791697.png"></p><p><img src="https://img.zshfoj.com/cc3bdc084b52811a86931a3915a9ce39cdbf22b69b0a515d6a0f1ffedcb11b2e.png"></p><h2 id="二维费用的背包问题"><a href="#二维费用的背包问题" class="headerlink" title="二维费用的背包问题"></a>二维费用的背包问题</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><img src="https://s21.ax1x.com/2024/04/08/pFL0TPS.jpg" alt="jj"></p><h3 id="例题-ACW8-二维费用的背包问题"><a href="#例题-ACW8-二维费用的背包问题" class="headerlink" title="例题:(ACW8)二维费用的背包问题"></a>例题:(ACW8)二维费用的背包问题</h3><p><img src="https://s21.ax1x.com/2024/04/08/pFL0H2Q.png" alt="a"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,v1,m1,f[<span class="number">110</span>][<span class="number">110</span>],m[<span class="number">10010</span>],v[<span class="number">10010</span>],w[<span class="number">10010</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;v1&gt;&gt;m1;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin&gt;&gt;v[i]&gt;&gt;m[i]&gt;&gt;w[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=v1;j&gt;=v[i];j--)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=m1;k&gt;=m[i];k--)&#123;</span><br><span class="line">f[j][k]=<span class="built_in">max</span>(f[j][k],f[j-v[i]][k-m[i]]+w[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;f[v1][m1];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-03-30竞赛笔记&amp;周赛总结笔记</title>
      <link href="//post/2024-03-30%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0&amp;%E5%91%A8%E8%B5%9B%E6%80%BB%E7%BB%93%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-03-30%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0&amp;%E5%91%A8%E8%B5%9B%E6%80%BB%E7%BB%93%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-3-30"><a href="#2024-3-30" class="headerlink" title="2024&#x2F;3&#x2F;30"></a>2024&#x2F;3&#x2F;30</h1><p>先放个图搞笑一下awa</p><p><a href="https://imgse.com/i/pFTtJaR"><img src="https://s21.ax1x.com/2024/03/30/pFTtJaR.png" alt="pFTtJaR.png"></a></p><p>又双叒叕放2个好东西……</p><p><a href="https://www.luogu.com.cn/paste/ptj1wm4k">JIYU万能密码</a></p><p><a href="https://lglg.top/user/942118">我的LGLG.TOP</a></p><h2 id="正片"><a href="#正片" class="headerlink" title="正片"></a>正片</h2><h3 id="T1药剂实验"><a href="#T1药剂实验" class="headerlink" title="T1药剂实验"></a>T1药剂实验</h3><p>(这题<strong>暴力</strong>也可以啊哈哈哈)</p><p><a href="https://imgse.com/i/pFTtK2T"><img src="https://s21.ax1x.com/2024/03/30/pFTtK2T.jpg" alt="pFTtK2T.jpg"></a></p><p><img src="https://img.zshfoj.com/f51a6005adc1bca05e3baf4a771f2789fc642e87a743d02597fce5a4b4f3ba6a.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这做法怎么这么S*啊......</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span>  </span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;  </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="type">int</span> a,b,c,d,e,f,g,h,i,j,in,x=<span class="number">0</span>;  </span><br><span class="line">    cin&gt;&gt;in;  </span><br><span class="line">    <span class="keyword">for</span> (a=<span class="number">1</span>;a&lt;=<span class="number">3</span>;a++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">for</span> (b=<span class="number">1</span>;b&lt;=<span class="number">3</span>;b++)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">for</span> (c=<span class="number">1</span>;c&lt;=<span class="number">3</span>;c++)  </span><br><span class="line">            &#123;  </span><br><span class="line">                <span class="keyword">for</span> (d=<span class="number">1</span>;d&lt;=<span class="number">3</span>;d++)  </span><br><span class="line">                &#123;  </span><br><span class="line">                    <span class="keyword">for</span> (e=<span class="number">1</span>;e&lt;=<span class="number">3</span>;e++)  </span><br><span class="line">                    &#123;  </span><br><span class="line">                        <span class="keyword">for</span> (f=<span class="number">1</span>;f&lt;=<span class="number">3</span>;f++)  </span><br><span class="line">                        &#123;  </span><br><span class="line">                            <span class="keyword">for</span> (g=<span class="number">1</span>;g&lt;=<span class="number">3</span>;g++)  </span><br><span class="line">                            &#123;  </span><br><span class="line">                                <span class="keyword">for</span>(h=<span class="number">1</span>;h&lt;=<span class="number">3</span>;h++)  </span><br><span class="line">                                &#123;  </span><br><span class="line">                                    <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=<span class="number">3</span>;i++)  </span><br><span class="line">                                    &#123;  </span><br><span class="line">                                        <span class="keyword">for</span> (j=<span class="number">1</span>;j&lt;=<span class="number">3</span>;j++)  </span><br><span class="line">                                        &#123;  </span><br><span class="line">                                            <span class="keyword">if</span> (a+b+c+d+e+f+g+h+i+j==in)  </span><br><span class="line">                                            &#123;  </span><br><span class="line">                                                x++;  </span><br><span class="line">                                            &#125;  </span><br><span class="line">                                        &#125;  </span><br><span class="line">                                    &#125;  </span><br><span class="line">                                &#125;  </span><br><span class="line">                            &#125;  </span><br><span class="line">                        &#125;  </span><br><span class="line">                    &#125;  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">    cout&lt;&lt;x&lt;&lt;endl;  </span><br><span class="line">    <span class="keyword">for</span> (a=<span class="number">1</span>;a&lt;=<span class="number">3</span>;a++)  </span><br><span class="line">    &#123;  </span><br><span class="line">        <span class="keyword">for</span> (b=<span class="number">1</span>;b&lt;=<span class="number">3</span>;b++)  </span><br><span class="line">        &#123;  </span><br><span class="line">            <span class="keyword">for</span> (c=<span class="number">1</span>;c&lt;=<span class="number">3</span>;c++)  </span><br><span class="line">            &#123;  </span><br><span class="line">                <span class="keyword">for</span> (d=<span class="number">1</span>;d&lt;=<span class="number">3</span>;d++)  </span><br><span class="line">                &#123;  </span><br><span class="line">                    <span class="keyword">for</span> (e=<span class="number">1</span>;e&lt;=<span class="number">3</span>;e++)  </span><br><span class="line">                    &#123;  </span><br><span class="line">                        <span class="keyword">for</span> (f=<span class="number">1</span>;f&lt;=<span class="number">3</span>;f++)  </span><br><span class="line">                        &#123;  </span><br><span class="line">                            <span class="keyword">for</span> (g=<span class="number">1</span>;g&lt;=<span class="number">3</span>;g++)  </span><br><span class="line">                            &#123;  </span><br><span class="line">                                <span class="keyword">for</span>(h=<span class="number">1</span>;h&lt;=<span class="number">3</span>;h++)  </span><br><span class="line">                                &#123;  </span><br><span class="line">                                    <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=<span class="number">3</span>;i++)  </span><br><span class="line">                                    &#123;  </span><br><span class="line">                                        <span class="keyword">for</span> (j=<span class="number">1</span>;j&lt;=<span class="number">3</span>;j++)  </span><br><span class="line">                                        &#123;  </span><br><span class="line">                                            <span class="keyword">if</span> (a+b+c+d+e+f+g+h+i+j==in)  </span><br><span class="line">                                            &#123;  </span><br><span class="line">                                                cout&lt;&lt;a&lt;&lt;<span class="string">&quot; &quot;</span>;  </span><br><span class="line">                                                cout&lt;&lt;b&lt;&lt;<span class="string">&quot; &quot;</span>;  </span><br><span class="line">                                                cout&lt;&lt;c&lt;&lt;<span class="string">&quot; &quot;</span>;  </span><br><span class="line">                                                cout&lt;&lt;d&lt;&lt;<span class="string">&quot; &quot;</span>;  </span><br><span class="line">                                                cout&lt;&lt;e&lt;&lt;<span class="string">&quot; &quot;</span>;  </span><br><span class="line">                                                cout&lt;&lt;f&lt;&lt;<span class="string">&quot; &quot;</span>;  </span><br><span class="line">                                                cout&lt;&lt;g&lt;&lt;<span class="string">&quot; &quot;</span>;  </span><br><span class="line">                                                cout&lt;&lt;h&lt;&lt;<span class="string">&quot; &quot;</span>;  </span><br><span class="line">                                                cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>;  </span><br><span class="line">                                                cout&lt;&lt;j&lt;&lt;endl;  </span><br><span class="line">                                            &#125;  </span><br><span class="line">                                        &#125;  </span><br><span class="line">                                    &#125;  </span><br><span class="line">                                &#125;  </span><br><span class="line">                            &#125;  </span><br><span class="line">                        &#125;  </span><br><span class="line">                    &#125;  </span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h3 id="T2装饰"><a href="#T2装饰" class="headerlink" title="T2装饰"></a>T2装饰</h3><p>完全没有想到是<strong>完全背包</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10001</span>];<span class="comment">//第i种花的数量</span></span><br><span class="line"><span class="type">int</span> f[<span class="number">114</span>][<span class="number">514</span>];<span class="comment">//前i种花在花盆数量为j的方案数</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1e6</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i];</span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;<span class="comment">//全部不放也是一种方案数</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;<span class="comment">//物品 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=m;j++)&#123;<span class="comment">//花盆数 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k=<span class="number">0</span>;k&lt;=j&amp;&amp;k&lt;=a[i];k++)&#123;<span class="comment">//第i种花取k盆 </span></span><br><span class="line">f[i][j]=(f[i][j]+f[i<span class="number">-1</span>][j-k])%mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;f[n][m];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T3星航补给"><a href="#T3星航补给" class="headerlink" title="T3星航补给"></a>T3星航补给</h3><p>又双叒叕是一个<strong>DFS</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m,a[<span class="number">100001</span>],l,r,ans;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> w)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x&gt;n)&#123;</span><br><span class="line"><span class="keyword">if</span>(w&gt;=l)&#123;<span class="comment">//满足l~r</span></span><br><span class="line">ans++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(w+a[x]&lt;=r)&#123;<span class="comment">//剪枝:质量没有超过r，说明装了可能还在l~r </span></span><br><span class="line"><span class="built_in">dfs</span>(x+<span class="number">1</span>,w+a[x]);<span class="comment">//装 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(x+<span class="number">1</span>,w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;l&gt;&gt;r;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i];</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="T4乐队采购"><a href="#T4乐队采购" class="headerlink" title="T4乐队采购"></a>T4乐队采购</h3><p>nnd这题这么简单就AC了！降黄！降黄！降黄！降黄！降黄！降黄！降黄！</p><p><img src="https://img.zshfoj.com/7c51f631bd59fd272378169840edd75dd62b285c0f664bbd46caceaca5d408ad.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m,s,ans;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"><span class="type">int</span> w,v;</span><br><span class="line">&#125;b[<span class="number">114514</span>];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x.v==y.v)&#123;<span class="comment">//重要度相等 </span></span><br><span class="line"><span class="keyword">return</span> x.w&lt;y.w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> x.v&gt;y.v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">s=m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;b[i].w&gt;&gt;b[i].v;</span><br><span class="line"><span class="built_in">sort</span>(b+<span class="number">1</span>,b+<span class="number">1</span>+n,cmp);</span><br><span class="line"><span class="type">int</span> x=<span class="number">1</span>;<span class="comment">//取第一个数组的下标</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(m-b[i].w&gt;=<span class="number">0</span>)&#123;<span class="comment">//可以放 </span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">abs</span>(b[i].w-b[x].w)&lt;=<span class="number">3</span>) <span class="comment">//与最大的差是否小于3</span></span><br><span class="line"><span class="keyword">if</span>(b[i].w&gt;b[x].w) x=i;<span class="comment">//取最大值的下表</span></span><br><span class="line">m-=b[i].w;<span class="comment">//放</span></span><br><span class="line">ans+=b[i].v; </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>没有发挥好（怎么都t*用DFS做啊，我正好不太会），继续努力！</p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-03-28竞赛笔记</title>
      <link href="//post/2024-03-28%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-03-28%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-3-28"><a href="#2024-3-28" class="headerlink" title="2024&#x2F;3&#x2F;28"></a>2024&#x2F;3&#x2F;28</h1><p><img src="https://img.zshfoj.com/9559176ba379a63df6677bda9e2d8bf5440136298d6a300fad3f053679a90bfb.png"></p><p><img src="https://s21.ax1x.com/2024/03/28/pFo8WLR.jpg" alt="pFo8WLR.jpg"></p><p><img src="https://s21.ax1x.com/2024/03/28/pFoJLVI.jpg" alt="pFoJLVI.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-03-27竞赛笔记</title>
      <link href="//post/2024-03-27%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-03-27%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-3-27"><a href="#2024-3-27" class="headerlink" title="2024&#x2F;3&#x2F;27"></a>2024&#x2F;3&#x2F;27</h1><p>去使用<a href="https://www.acwing.com/">ACWing</a>把！</p><h3 id="动态规划专题——背包问题"><a href="#动态规划专题——背包问题" class="headerlink" title="动态规划专题——背包问题"></a><a href="https://blog.csdn.net/raelum/article/details/128996521">动态规划专题——背包问题</a></h3><h3 id="ACW2-01背包问题"><a href="#ACW2-01背包问题" class="headerlink" title="ACW2.01背包问题"></a>ACW2.01背包问题</h3><p><img src="https://s21.ax1x.com/2024/03/27/pFI3qmt.jpg"></p><p><img src="https://s21.ax1x.com/2024/03/27/pFI3OTf.jpg"></p><p><img src="https://s21.ax1x.com/2024/03/27/pFI3xfg.jpg"></p><p><img src="https://s21.ax1x.com/2024/03/27/pFI8SpQ.jpg"></p><p><img src="https://s21.ax1x.com/2024/03/27/pFI8plj.jpg"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> m,n;</span><br><span class="line"><span class="type">int</span> w[<span class="number">114514</span>], v[<span class="number">114514</span>];</span><br><span class="line"><span class="type">int</span> f[<span class="number">2001</span>][<span class="number">2001</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;w[i],&amp;v[i]); </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=m;i++)f[<span class="number">0</span>][i]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=n;i++)f[i][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=m;j&gt;=<span class="number">0</span>;j--)&#123;        </span><br><span class="line">        <span class="keyword">if</span>(j&lt;w[i]) f[i][j]=f[i<span class="number">-1</span>][j];</span><br><span class="line">        <span class="keyword">else</span> f[i][j]=<span class="built_in">max</span>(f[i<span class="number">-1</span>][j],f[i<span class="number">-1</span>][j-w[i]]+v[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,f[n][m]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-03-26竞赛笔记</title>
      <link href="//post/2024-03-26%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-03-26%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-3-26"><a href="#2024-3-26" class="headerlink" title="2024&#x2F;3&#x2F;26"></a>2024&#x2F;3&#x2F;26</h1><p><img src="https://s21.ax1x.com/2024/03/26/pF5WPQs.png"></p><p><img src="https://s21.ax1x.com/2024/03/26/pF5Rvo8.png"></p><p><img src="https://s21.ax1x.com/2024/03/26/pF5WWlj.jpg"></p><p><img src="https://s21.ax1x.com/2024/03/26/pF5W5mq.jpg"></p><p><img src="https://s21.ax1x.com/2024/03/26/pF5W7kT.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-03-25竞赛笔记</title>
      <link href="//post/2024-03-25%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-03-25%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-3-25"><a href="#2024-3-25" class="headerlink" title="2024&#x2F;3&#x2F;25"></a>2024&#x2F;3&#x2F;25</h1><p><img src="https://s21.ax1x.com/2024/03/25/pF4IWu9.png" alt="pF4IWu9.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAX (100000+100)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> x,r,m,n,p,d[MAX];<span class="comment">//x政府期望价格，r成本</span></span><br><span class="line"><span class="type">double</span> Min=<span class="number">-1e9</span>,Max=<span class="number">1e9</span>;<span class="comment">//记录答案的可能范围 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;x&gt;&gt;m&gt;&gt;n;</span><br><span class="line">r=m;<span class="comment">//成本价格记录到r</span></span><br><span class="line"><span class="keyword">while</span> (m!=<span class="number">-1</span>&amp;&amp;n!=<span class="number">-1</span>)<span class="comment">//循环知道输入的m和n都是-1 </span></span><br><span class="line">&#123;</span><br><span class="line">d[m]=n;<span class="comment">//当前价格点存储到d[m]</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=p+<span class="number">1</span>;i&lt;m;i++)<span class="comment">//线性插值计算为提供的价格点的销量 </span></span><br><span class="line">d[i]=d[i<span class="number">-1</span>]+(n-d[p])/(m-p);<span class="comment">//基于上一个和当前的价格点，计算中间点 </span></span><br><span class="line">p=m;<span class="comment">//更新</span></span><br><span class="line">cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line">&#125;</span><br><span class="line">cin&gt;&gt;m;</span><br><span class="line"><span class="keyword">while</span>(d[p]&gt;m)<span class="comment">//继续计算价格高于最高定价的销量 </span></span><br><span class="line">p++,d[p]=d[p<span class="number">-1</span>]-m;<span class="comment">//递减规则地推 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=r;i&lt;=p;i++)<span class="comment">//遍历全部价格点 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> ans=(d[x]*(x-r)-d[i]*(i-r))*<span class="number">1.0</span>/(d[i]-d[x]);<span class="comment">//计算需要的税收、补贴金额</span></span><br><span class="line"><span class="type">double</span> g=d[i]-d[x];</span><br><span class="line"><span class="keyword">if</span>(g&gt;<span class="number">0</span>) Max=<span class="built_in">min</span>(Max,ans);<span class="comment">//正数为补贴</span></span><br><span class="line"><span class="keyword">else</span> Min=<span class="built_in">max</span>(Min,ans);<span class="comment">//否则为税收 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(Min&gt;<span class="number">0</span>) cout&lt;&lt;(<span class="type">int</span>)<span class="built_in">ceil</span>(Min);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(Max&lt;<span class="number">0</span>) cout&lt;&lt;(<span class="type">int</span>)<span class="built_in">floor</span>(Max);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024.03.23初一编程马拉松赛赛后总结</title>
      <link href="//post/2024-03-23%E5%91%A8%E8%B5%9B%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93.html"/>
      <url>//post/2024-03-23%E5%91%A8%E8%B5%9B%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-3-22-周赛总结"><a href="#2024-3-22-周赛总结" class="headerlink" title="2024&#x2F;3&#x2F;22 周赛总结"></a>2024&#x2F;3&#x2F;22 周赛总结</h1><h2 id="总分：55"><a href="#总分：55" class="headerlink" title="总分：55"></a>总分：55</h2><h2 id="T1-项目贡献度统计"><a href="#T1-项目贡献度统计" class="headerlink" title="T1 项目贡献度统计"></a>T1 项目贡献度统计</h2><h3 id="得分：10"><a href="#得分：10" class="headerlink" title="得分：10"></a>得分：<strong>10</strong></h3><h3 id="原题传送门：P1571"><a href="#原题传送门：P1571" class="headerlink" title="原题传送门：P1571"></a>原题传送门：<a href="https://www.luogu.com.cn/problem/P1571">P1571</a></h3><p>Q：❌原因？<br>A：想的都不对，本来想着用二分的（确实是对的），但是不知道为啥就用了搜索<br>Q：最佳做法？<br>A：<strong>模拟，二分，Maps</strong><br>Q：正确代码？<br>A：<br>1.（示例、题解）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll n,m;</span><br><span class="line">ll l,r;<span class="comment">//二分用的 </span></span><br><span class="line">ll a[<span class="number">114514</span>],b[<span class="number">114514</span>];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++) cin&gt;&gt;b[i];</span><br><span class="line"><span class="built_in">sort</span>(b+<span class="number">1</span>,b+m+<span class="number">1</span>);<span class="comment">//对输入的B数组初次排序 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">l=<span class="number">1</span>;r=m;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">    <span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(b[mid]==a[i])&#123;<span class="comment">//如果这个值在B数组出现过且与a[i]相同 </span></span><br><span class="line">cout&lt;&lt;a[i]&lt;&lt;<span class="string">&quot; &quot;</span>;<span class="comment">//输出 </span></span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//跳过 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(b[mid]&lt;a[i]) l=mid+<span class="number">1</span>;<span class="comment">//如果数在右边 </span></span><br><span class="line"><span class="keyword">else</span> r=mid<span class="number">-1</span>;<span class="comment">//如果数在左边 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.（同学的）</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/ce2hk57k.png"></p><h2 id="T2-山地探险"><a href="#T2-山地探险" class="headerlink" title="T2 山地探险"></a>T2 山地探险</h2><h3 id="得分：20"><a href="#得分：20" class="headerlink" title="得分：20"></a>得分：<strong>20</strong></h3><h3 id="原题传送门：P1434"><a href="#原题传送门：P1434" class="headerlink" title="原题传送门：P1434"></a>原题传送门：<a href="https://www.luogu.com.cn/problem/P1434">P1434</a></h3><p>Q：❌原因？<br>A：思考不正确（以为1是最低的）<br>Q：最佳做法？<br>A：<strong>DP，搜索，递归，搜索（记忆化）</strong><br>Q：正确代码？<br>A：<br>1.（示例、题解）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> n,m,a[<span class="number">201</span>][<span class="number">201</span>],s[<span class="number">201</span>][<span class="number">201</span>],ans;</span><br><span class="line"><span class="type">bool</span> use[<span class="number">201</span>][<span class="number">201</span>];<span class="comment">//这个就是所谓的不需要</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s[x][y])<span class="keyword">return</span> s[x][y];<span class="comment">//记忆化搜索</span></span><br><span class="line">    s[x][y]=<span class="number">1</span>;<span class="comment">//题目中答案是有包含这个点的</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">    &#123;  <span class="type">int</span> xx=dx[i]+x;</span><br><span class="line">       <span class="type">int</span> yy=dy[i]+y;<span class="comment">//四个方向</span></span><br><span class="line">       <span class="keyword">if</span>(xx&gt;<span class="number">0</span>&amp;&amp;yy&gt;<span class="number">0</span>&amp;&amp;xx&lt;=n&amp;&amp;yy&lt;=m&amp;&amp;a[x][y]&gt;a[xx][yy])&#123;</span><br><span class="line">         <span class="built_in">dfs</span>(xx,yy);</span><br><span class="line">          s[x][y]=<span class="built_in">max</span>(s[x][y],s[xx][yy]+<span class="number">1</span>);</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> s[x][y];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);<span class="comment">//同题目的R,C</span></span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">       <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="comment">//找从每个出发的最长距离</span></span><br><span class="line">      <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        ans=<span class="built_in">max</span>(ans,<span class="built_in">dfs</span>(i,j));<span class="comment">//取最大值</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// by 路人七</span></span><br></pre></td></tr></table></figure><p>2.（同学的）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll r,c,a[<span class="number">114</span>][<span class="number">114</span>],up[<span class="number">1145</span>][<span class="number">1145</span>];</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;,dy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">d</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span>&#123;<span class="comment">//记忆化搜索 </span></span><br><span class="line"><span class="keyword">if</span>(up[x][y]) <span class="keyword">return</span> up[x][y];<span class="comment">//如果搜过 直接使用保存的结果 </span></span><br><span class="line">up[x][y]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line"><span class="type">int</span> tx=dx[i]+x,ty=dy[i]+y;</span><br><span class="line"><span class="keyword">if</span>(tx&gt;=<span class="number">1</span>&amp;&amp;tx&lt;=r&amp;&amp;ty&gt;=<span class="number">1</span>&amp;&amp;ty&lt;=c&amp;&amp;a[x][y]&gt;a[tx][ty])&#123;</span><br><span class="line"><span class="built_in">d</span>(tx,ty);</span><br><span class="line">up[x][y]=<span class="built_in">max</span>(up[x][y],up[tx][ty]+<span class="number">1</span>);<span class="comment">//判断最大滑多远</span></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> up[x][y];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;r&gt;&gt;c;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=r;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=c;j++)&#123;</span><br><span class="line">cin&gt;&gt;a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=r;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=c;j++)</span><br><span class="line">ans=<span class="built_in">max</span>(ans,<span class="built_in">d</span>(i,j));</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="T3-山地探险"><a href="#T3-山地探险" class="headerlink" title="T3 山地探险"></a>T3 山地探险</h2><h3 id="得分：25"><a href="#得分：25" class="headerlink" title="得分：25"></a>得分：<strong>25</strong></h3><h3 id="原题传送门：P1023"><a href="#原题传送门：P1023" class="headerlink" title="原题传送门：P1023"></a>原题传送门：<a href="https://www.luogu.com.cn/problem/P1023">P1023</a></h3><p>Q：❌原因？<br>A：不理解题目意思<br>Q：最佳做法？<br>A：<strong>数学，枚举</strong><br>Q：正确代码？<br>A：</p><ol><li>（示例、题解）<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100010</span>][<span class="number">3</span>];<span class="comment">//用于存放价格和销量的数组</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">1</span>,j=<span class="number">1</span>,k,expect,down,max,temp,cha,xl,num,s,price,p;</span><br><span class="line">    cin&gt;&gt;expect;<span class="comment">//读入预期价</span></span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;a[i][<span class="number">1</span>]&gt;&gt;a[i][<span class="number">2</span>]&amp;&amp;a[i][<span class="number">1</span>]!=<span class="number">-1</span>&amp;&amp;a[i] [<span class="number">2</span>]!=<span class="number">-1</span>)<span class="comment">//如果输入的两个数不是-1，-1</span></span><br><span class="line">    &#123;</span><br><span class="line">    i++;<span class="comment">//循环变量i++</span></span><br><span class="line">    <span class="keyword">if</span>(i&gt;<span class="number">2</span>&amp;&amp;a[i<span class="number">-1</span>][<span class="number">1</span>]-a[i<span class="number">-2</span>][<span class="number">1</span>]&gt;<span class="number">1</span>)<span class="comment">//如果两个价格之间差大于一</span></span><br><span class="line">    &#123;</span><br><span class="line">    i--;<span class="comment">//回到上一个读入的销量</span></span><br><span class="line">    cha=(a[i<span class="number">-1</span>][<span class="number">2</span>]-a[i][<span class="number">2</span>])/(a[i][<span class="number">1</span>]-a[i<span class="number">-1</span>][<span class="number">1</span>]);<span class="comment">//求出每次销量减少多少：销量差/价格差</span></span><br><span class="line">    temp=a[i][<span class="number">1</span>];<span class="comment">//记录下价格</span></span><br><span class="line">    <span class="keyword">for</span>(j=a[i<span class="number">-1</span>][<span class="number">1</span>]+<span class="number">1</span>;j&lt;=temp;j++)<span class="comment">//按价格递增顺序依次写入</span></span><br><span class="line">    &#123;</span><br><span class="line">    a[i][<span class="number">1</span>]=j;<span class="comment">//写入价格</span></span><br><span class="line">    a[i][<span class="number">2</span>]=a[i<span class="number">-1</span>][<span class="number">2</span>]-cha;<span class="comment">//按销量差写入销量</span></span><br><span class="line">    i++;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cin&gt;&gt;down;<span class="comment">//输入超过最大价格之后每次销量降低多少</span></span><br><span class="line">    i--;<span class="comment">//因为上面的while循环最后有i++所以用i--抵消……</span></span><br><span class="line">    xl=a[i][<span class="number">2</span>];<span class="comment">//记录目前的销量</span></span><br><span class="line">    <span class="keyword">while</span>(xl&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span>(xl-down&lt;<span class="number">0</span>)<span class="keyword">break</span>;<span class="comment">//如销量小于零则退出</span></span><br><span class="line">    <span class="keyword">else</span><span class="comment">//否则</span></span><br><span class="line">    &#123;</span><br><span class="line">    xl-=down;<span class="comment">//销量每次减掉down</span></span><br><span class="line">    i++;<span class="comment">//循环变量++</span></span><br><span class="line">    a[i][<span class="number">1</span>]=a[i<span class="number">-1</span>][<span class="number">1</span>]+<span class="number">1</span>;<span class="comment">//每次价格+1</span></span><br><span class="line">    a[i][<span class="number">2</span>]=xl;<span class="comment">//销量就是xl</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=<span class="number">10000</span>;j++)<span class="comment">//该遍历了，因为收税相当于补贴*-1所以记录一下符号即可</span></span><br><span class="line">    &#123;</span><br><span class="line">    max=<span class="number">-99999</span>;<span class="comment">//用于存储最大的总利润</span></span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">1</span>;k&lt;=i;k++)<span class="comment">//每次扫一遍每一种价格</span></span><br><span class="line">    &#123;</span><br><span class="line">    num=(a[k][<span class="number">1</span>]-a[<span class="number">1</span>][<span class="number">1</span>]+j)*a[k][<span class="number">2</span>];<span class="comment">//套公式算出总利润</span></span><br><span class="line">    <span class="keyword">if</span>(num&gt;=max)<span class="comment">//如果总利润比目前最大的大</span></span><br><span class="line">    &#123;</span><br><span class="line">        max=num;<span class="comment">//更新max</span></span><br><span class="line">    price=a[k][<span class="number">1</span>];<span class="comment">//记录下价格</span></span><br><span class="line">    p=<span class="number">1</span>;<span class="comment">//记录下符号</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(price==expect)&#123;cout&lt;&lt;j*p;<span class="keyword">return</span> <span class="number">0</span>;&#125;<span class="comment">//如果价格就是政府预期价则打印出来，因为本身就是从小到大遍历所以不用求绝对值最小的</span></span><br><span class="line">    max=<span class="number">-99999</span>;<span class="comment">//后面是收税，原理同上</span></span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">1</span>;k&lt;=i;k++)</span><br><span class="line">    &#123;</span><br><span class="line">    num=(a[k][<span class="number">1</span>]-a[<span class="number">1</span>][<span class="number">1</span>]-j)*a[k][<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">if</span>(num&gt;=max)</span><br><span class="line">    &#123;</span><br><span class="line">       max=num;</span><br><span class="line">    price=a[k][<span class="number">1</span>];</span><br><span class="line">    p=<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(price==expect)&#123;cout&lt;&lt;j*p;<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//前面有了return 0;这儿就不用了。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>（老师的）</li></ol><p><a href="https://www.luogu.com.cn/article/l675luh4">代码</a></p><h2 id="T4-下棋"><a href="#T4-下棋" class="headerlink" title="T4 下棋"></a>T4 下棋</h2><h3 id="得分：0"><a href="#得分：0" class="headerlink" title="得分：0"></a>得分：<strong>0</strong></h3><h3 id="原题传送门：P1259"><a href="#原题传送门：P1259" class="headerlink" title="原题传送门：P1259"></a>原题传送门：<a href="https://www.luogu.com.cn/problem/P1259">P1259</a></h3><p>Q：❌原因？<br>A：没有做（太复杂了）<br>Q：最佳做法？<br>A：<strong>递归、分治</strong><br>Q：正确代码？<br>A：</p><ol><li>（示例、题解）<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">char</span> ch[<span class="number">205</span>];<span class="comment">//存储棋子的状态</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">char</span> &amp;a, <span class="type">char</span> &amp;b)</span><span class="comment">//交换函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span> t = a;</span><br><span class="line">    a = b;</span><br><span class="line">    b = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">output</span><span class="params">()</span></span>&#123;<span class="comment">//输出</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span> * n + <span class="number">2</span>; i++)</span><br><span class="line">        <span class="built_in">putchar</span>(ch[i]);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">movechess</span><span class="params">(<span class="type">int</span> start, <span class="type">int</span> end)</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//移动棋子</span></span><br><span class="line">    <span class="built_in">swap</span>(ch[start], ch[end]);</span><br><span class="line">    <span class="built_in">swap</span>(ch[start + <span class="number">1</span>], ch[end + <span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">output</span>();</span><br><span class="line">&#125;</span><br><span class="line">string out[<span class="number">4</span>] = &#123;<span class="string">&quot;ooo*o**--*&quot;</span>, <span class="string">&quot;o--*o**oo*&quot;</span>, <span class="string">&quot;o*o*o*--o*&quot;</span>, <span class="string">&quot;--o*o*o*o*&quot;</span>&#125;;</span><br><span class="line"><span class="comment">//打表qwq</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        ch[i] = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n; i &lt; <span class="number">2</span> * n; i++)</span><br><span class="line">        ch[i] = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">    ch[<span class="number">2</span> * n] = <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">    ch[<span class="number">2</span> * n + <span class="number">1</span>] = <span class="string">&#x27;-&#x27;</span>;</span><br><span class="line">    <span class="comment">//打印初始状态</span></span><br><span class="line">    <span class="built_in">output</span>();</span><br><span class="line">    <span class="type">int</span> len = n;</span><br><span class="line">    <span class="comment">//需要移动的黑/白棋子</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">movechess</span>(len - <span class="number">1</span>, <span class="number">2</span> * len);</span><br><span class="line">        <span class="comment">//中间的 &quot;o*&quot; 与 &quot;--&quot; 交换</span></span><br><span class="line">        len--;</span><br><span class="line">        <span class="keyword">if</span> (len == <span class="number">3</span>)</span><br><span class="line">        <span class="comment">//不符合上述规律,开始输出打表内容</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">movechess</span>(len, <span class="number">2</span> * len);</span><br><span class="line">        <span class="comment">//最左边的 &quot;**&quot; 与 &quot;--&quot; 交换</span></span><br><span class="line">    &#125;</span><br><span class="line">    string ss;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">4</span>; i++)</span><br><span class="line">        ss += <span class="string">&quot;o*&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        cout &lt;&lt; out[i] &lt;&lt; ss &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>（同学的）<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;bits/stdc++.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">int n;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;n; </span><br><span class="line">for(int i=1;i&lt;=n;i++)//先输入初始的棋子 </span><br><span class="line">cout&lt;&lt;&quot;o&quot;;</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">cout&lt;&lt;&quot;*&quot;;</span><br><span class="line">cout&lt;&lt;&quot;--&quot;&lt;&lt;endl; </span><br><span class="line">for(int i=2;i&lt;=n-3;i++)//从第2行到倒数第5行都有相同的规律 </span><br><span class="line">&#123;</span><br><span class="line">for(int j=n;j&gt;=i;j--)   </span><br><span class="line">cout&lt;&lt;&quot;o&quot;;</span><br><span class="line">cout&lt;&lt;&quot;--&quot;;</span><br><span class="line">for(int j=n;j&gt;=i;j--)  </span><br><span class="line">cout&lt;&lt;&quot;*&quot;;</span><br><span class="line">for(int j=1;j&lt;i;j++)</span><br><span class="line">cout&lt;&lt;&quot;o*&quot;;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">//每两行为一个周期，前后两行的空格位置换了一下 </span><br><span class="line">for(int j=n;j&gt;=i;j--)</span><br><span class="line">cout&lt;&lt;&quot;o&quot;;</span><br><span class="line">for(int j=n;j&gt;=i;j--)</span><br><span class="line">cout&lt;&lt;&quot;*&quot;;</span><br><span class="line">cout&lt;&lt;&quot;--&quot;;</span><br><span class="line">for(int j=1;j&lt;i;j++)</span><br><span class="line">cout&lt;&lt;&quot;o*&quot;;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">if(n&gt;4)//规律 </span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;&quot;ooo--***&quot;;</span><br><span class="line">for(int i=1;i&lt;=n-3;i++)</span><br><span class="line">cout&lt;&lt;&quot;o*&quot;;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;&quot;ooo*o**--*&quot;;</span><br><span class="line">for(int i=1;i&lt;=n-4;i++)//每一行都有固定的规律 </span><br><span class="line">cout&lt;&lt;&quot;o*&quot;;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;&quot;o--*o**o&quot;;</span><br><span class="line">for(int i=1;i&lt;=n-3;i++)</span><br><span class="line">cout&lt;&lt;&quot;o*&quot;;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;&quot;o*o*o*--&quot;;</span><br><span class="line">for(int i=1;i&lt;=n-3;i++)</span><br><span class="line">cout&lt;&lt;&quot;o*&quot;;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;&quot;--&quot;;</span><br><span class="line">for(int i=1;i&lt;=n;i++)</span><br><span class="line">cout&lt;&lt;&quot;o*&quot;;</span><br><span class="line">   return 0; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>总体来说还行，但是我不太坚定自己的选择，导致第一题的10分（QAQ），下次我会继续努力！</p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
            <tag> 周赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-03-22竞赛笔记</title>
      <link href="//post/2024-03-22%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-03-22%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-3-22"><a href="#2024-3-22" class="headerlink" title="2024&#x2F;3&#x2F;22"></a>2024&#x2F;3&#x2F;22</h1><p><img src="https://img.zshfoj.com/713eb7ad21276bf91309b07fe0a50d3f1dd2bbfc31768828f151df7b052f6d64.png"></p><p><img src="https://img.zshfoj.com/73ad8d8a7686aa17d0200d4f4d4dbb46c6f19edd7fd5386adb44a92e905372b1.png"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sep的网站限时内测</title>
      <link href="//post/Sep%E7%9A%84%E7%BD%91%E7%AB%99%E9%99%90%E6%97%B6%E5%86%85%E6%B5%8B.html"/>
      <url>//post/Sep%E7%9A%84%E7%BD%91%E7%AB%99%E9%99%90%E6%97%B6%E5%86%85%E6%B5%8B.html</url>
      
        <content type="html"><![CDATA[<h1 id="Minecraft-Sep的博客限时内测"><a href="#Minecraft-Sep的博客限时内测" class="headerlink" title="Minecraft-Sep的博客限时内测"></a>Minecraft-Sep的博客限时内测</h1><h3 id="你是否想要提前体验内测版本？"><a href="#你是否想要提前体验内测版本？" class="headerlink" title="你是否想要提前体验内测版本？"></a>你是否想要提前体验内测版本？</h3><h3 id="Radmin-LAN欢迎你awa"><a href="#Radmin-LAN欢迎你awa" class="headerlink" title="Radmin LAN欢迎你awa"></a>Radmin LAN欢迎你awa</h3><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><ol><li>去<a href="https://www.radmin-lan.cn/">官网</a>下载RadminLan</li><li>点击安装</li><li>安装后会是这个界面：</li></ol><p><img src="https://img.zshfoj.com/c5b205027e8212b03901fbdcf2ded8f6c7c7dc3934995537f2bbb0568a32c794.png"></p><ol start="4"><li>点击“加入网络”，输入服务器名和密码（<a href="https://www.luogu.com.cn/paste/dnwvrhlx">所有内测站的IP</a>）</li></ol><p><img src="https://img.zshfoj.com/7d5bdbd4fa344b8d999dc286cf7e6c8ebf7dd3db2925d63e92fb81e4aa2b0a29.png"></p><ol start="5"><li>等待连接成功后，访问“对方IP:4000”</li></ol><p><img src="https://img.zshfoj.com/db20a92279a305194c72d6932ffb3342d5d2443545c48e8006569c16e620f5be.png"></p><p><img src="https://img.zshfoj.com/1f9257872d7cdc22c6f010bca5b5b807ff2ede833de6f7b07dfdf5534604df52.png"></p><ol start="6"><li>即可看到内容！</li></ol>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 整活 </tag>
            
            <tag> Radmin LAN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-03-21竞赛笔记</title>
      <link href="//post/2024-03-21%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-03-21%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-3-21"><a href="#2024-3-21" class="headerlink" title="2024&#x2F;3&#x2F;21"></a>2024&#x2F;3&#x2F;21</h1><p><img src="https://img.qovv.cn/2024/03/21/65fc17e418bc3.png"></p><p><img src="https://img.qovv.cn/2024/03/21/65fc18379d106.png" alt="1711020378219.png"></p><p><img src="https://img.qovv.cn/2024/03/21/65fc186a2984b.png" alt="1711020429043.png"></p><p><img src="https://img.qovv.cn/2024/03/21/65fc1891af707.png" alt="1711020469322.png"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-03-20竞赛笔记</title>
      <link href="//post/2024-03-20%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-03-20%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-3-20"><a href="#2024-3-20" class="headerlink" title="2024&#x2F;3&#x2F;20"></a>2024&#x2F;3&#x2F;20</h1><h3 id="惨不忍睹的周赛分数……"><a href="#惨不忍睹的周赛分数……" class="headerlink" title="惨不忍睹的周赛分数……"></a>惨不忍睹的周赛分数……</h3><p><img src="https://img.zshfoj.com/e7d66f0838a5d499f901b2f9eb4ed76f1e0d3dcab9faa45e667f10e04c5b0f39.png"></p><h2 id="P3078-USACO13MAR-Poker-Hands-S"><a href="#P3078-USACO13MAR-Poker-Hands-S" class="headerlink" title="P3078 [USACO13MAR] Poker Hands S"></a>P3078 [USACO13MAR] Poker Hands S</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> n,a[<span class="number">114514</span>],ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i];</span><br><span class="line">ans=a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i+<span class="number">1</span>]&gt;a[i])</span><br><span class="line">ans+=a[i+<span class="number">1</span>]-a[i];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1843-奶牛晒衣服"><a href="#P1843-奶牛晒衣服" class="headerlink" title="P1843 奶牛晒衣服"></a>P1843 奶牛晒衣服</h2><p>得分：$\mathbf\color{green} 100$<br><img src="https://img.zshfoj.com/da40bd1d72ab5c405dfafe3a5733ba4e39451e96b413ed0f8692a898681bea93.png"></p><p>二分做法2</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//核心：二分枚举满足烘干条件的结果，取最优 </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> aaa[<span class="number">10000001</span>]; </span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a,b,total,l,mid;<span class="comment">//设l(必须是整数）是第i件衣服使用的烘干机时长</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> time)</span></span>&#123;<span class="comment">//检查是否可以在规定时间干掉，t是指每件衣服都必须在t秒以内干掉</span></span><br><span class="line">total=<span class="number">0</span>;<span class="comment">//烘干机已经使用的时间 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">l=(aaa[i]-time*a);<span class="comment">//(time*a)是总共可以烘干的时长</span></span><br><span class="line">l/=b;<span class="comment">//总共可以烘干的时长/烘干机额外的时长，也就是使用的烘干机时长 </span></span><br><span class="line"><span class="type">bool</span> can=(aaa[i]&gt;=time*a);<span class="comment">//判断是否多出（为烘干） </span></span><br><span class="line"><span class="keyword">if</span>(can)&#123;</span><br><span class="line">    <span class="type">int</span> test=aaa[i]-time*a;<span class="comment">//如果不能在time规定的时间以内烘干 </span></span><br><span class="line"><span class="keyword">if</span>(test%b!=<span class="number">0</span>) l++;<span class="comment">//如果超过烘干机使用的时长就要延长</span></span><br><span class="line">total+=l;<span class="comment">//烘干机使用时间++ </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> total&lt;=time;<span class="comment">//判断这件衣服可不可以在这个时间内烘干，能true，不能false </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;aaa[i];</span><br><span class="line"><span class="type">int</span> left=<span class="number">1</span>,right=<span class="number">0x7fffff</span>,sum=right;<span class="comment">//sum因此也要是极大数，为了后面的比较 </span></span><br><span class="line"><span class="keyword">while</span>(left&lt;=right)&#123;<span class="comment">//二分 </span></span><br><span class="line">mid=(left+right)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(mid))&#123;<span class="comment">//如果时间多余（不是最优） </span></span><br><span class="line">sum=<span class="built_in">min</span>(sum,mid);<span class="comment">//先取最小值（因为是最少时间） </span></span><br><span class="line">right=mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">left=mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="comment">//这里一直判断，知道得出满足烘干时间的结果 </span></span><br><span class="line">cout&lt;&lt;sum&lt;&lt;endl;<span class="comment">//输出 </span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>贪心</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">priority_queue&lt;<span class="type">int</span>,vector&lt;<span class="type">int</span>&gt;,less&lt;<span class="type">int</span>&gt; &gt; q;</span><br><span class="line"><span class="type">int</span> n,a,b;</span><br><span class="line"><span class="type">int</span> tim,mx;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line">q.<span class="built_in">push</span>(x);</span><br><span class="line">&#125;</span><br><span class="line">mx=q.<span class="built_in">top</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">while</span>(mx&gt;tim*a)</span><br><span class="line">&#123;</span><br><span class="line">tim++;</span><br><span class="line">mx-=b;</span><br><span class="line">q.<span class="built_in">push</span>(mx);</span><br><span class="line">mx=q.<span class="built_in">top</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;tim;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P6568-NOI-Online-3-提高组-水壶"><a href="#P6568-NOI-Online-3-提高组-水壶" class="headerlink" title="P6568 [NOI Online #3 提高组] 水壶"></a>P6568 [NOI Online #3 提高组] 水壶</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n,k,a[N];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> s,ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="type">int</span> l=<span class="number">1</span>,r=k+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=l;i&lt;=r;i++) s+=a[i];</span><br><span class="line"><span class="keyword">while</span>(r&lt;=n)&#123;</span><br><span class="line">ans=<span class="built_in">max</span>(ans,s);</span><br><span class="line">l++;r++;</span><br><span class="line">s-=a[l<span class="number">-1</span>];</span><br><span class="line">s+=a[r];</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1056-排座椅"><a href="#P1056-排座椅" class="headerlink" title="P1056 排座椅"></a>P1056 排座椅</h2><p><img src="https://gee.li/temp/2403/7802f9f472f0ed68.jpg"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> m,n,k,l,d;</span><br><span class="line"><span class="type">int</span> ax,ay,bx,by;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">hl</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line"><span class="type">int</span> n;<span class="comment">//需求度 </span></span><br><span class="line">&#125; x[<span class="number">1010</span>],y[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp1</span><span class="params">(hl a,hl b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.n&gt;b.n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp2</span><span class="params">(hl a,hl b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.id&lt;b.id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;m&gt;&gt;n&gt;&gt;k&gt;&gt;l&gt;&gt;d;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">x[i].id=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">y[i].id=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=d;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;ay&gt;&gt;ax&gt;&gt;by&gt;&gt;bx;</span><br><span class="line"><span class="keyword">if</span>(ay==by) </span><br><span class="line">x[<span class="built_in">min</span>(ax,bx)].n++;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">y[<span class="built_in">min</span>(ay,by)].n++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按需求度排序 </span></span><br><span class="line"><span class="built_in">sort</span>(x+<span class="number">1</span>,x+<span class="number">1</span>+n,cmp1);</span><br><span class="line"><span class="built_in">sort</span>(y+<span class="number">1</span>,y+<span class="number">1</span>+m,cmp1);</span><br><span class="line"><span class="comment">//按照id进行排序 </span></span><br><span class="line"><span class="built_in">sort</span>(x+<span class="number">1</span>,x+<span class="number">1</span>+l,cmp2);</span><br><span class="line"><span class="built_in">sort</span>(y+<span class="number">1</span>,y+<span class="number">1</span>+k,cmp2);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++) </span><br><span class="line">cout&lt;&lt;y[i].id&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=l;i++) </span><br><span class="line">cout&lt;&lt;x[i].id&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="P1902-刺杀大使"><a href="#P1902-刺杀大使" class="headerlink" title="P1902 刺杀大使"></a>P1902 刺杀大使</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m,a[<span class="number">1001</span>][<span class="number">1001</span>];</span><br><span class="line"><span class="type">bool</span> v[<span class="number">1001</span>][<span class="number">1001</span>];</span><br><span class="line"><span class="type">int</span> l=<span class="number">0</span>,r=<span class="number">1000</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"><span class="type">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> mid)</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(v,<span class="number">0</span>,<span class="built_in">sizeof</span>(v));</span><br><span class="line">queue&lt;node&gt; q;</span><br><span class="line">node start;</span><br><span class="line">start.x=<span class="number">1</span>,start.y=<span class="number">1</span>;</span><br><span class="line">q.<span class="built_in">push</span>(start);</span><br><span class="line">v[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">node head=q.<span class="built_in">front</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">3</span>;i++)&#123;</span><br><span class="line"><span class="type">int</span> xx=dx[i]+head.x;</span><br><span class="line"><span class="type">int</span> yy=dy[i]+head.y;</span><br><span class="line"><span class="keyword">if</span>(xx&gt;=<span class="number">1</span>&amp;&amp;xx&lt;=n&amp;&amp;yy&gt;=<span class="number">1</span>&amp;&amp;yy&lt;=m&amp;&amp;v[xx][yy]!=<span class="number">1</span>&amp;&amp;a[xx][yy]&lt;mid)&#123;</span><br><span class="line"><span class="keyword">if</span>(xx==n) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">v[xx][yy]=<span class="number">1</span>;</span><br><span class="line">node next;</span><br><span class="line">next.x=xx,next.y=yy;</span><br><span class="line">q.<span class="built_in">push</span>(next);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">cin&gt;&gt;a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line"><span class="type">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">check</span>(mid))&#123;</span><br><span class="line">ans=mid;</span><br><span class="line">r=mid<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> l=mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-03-18竞赛笔记</title>
      <link href="//post/2024-03-18%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-03-18%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-3-18"><a href="#2024-3-18" class="headerlink" title="2024&#x2F;3&#x2F;18"></a>2024&#x2F;3&#x2F;18</h1><p><img src="https://img.zshfoj.com/da40bd1d72ab5c405dfafe3a5733ba4e39451e96b413ed0f8692a898681bea93.png"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-03-06竞赛笔记</title>
      <link href="//post/2024-03-06%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-03-06%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-3-6"><a href="#2024-3-6" class="headerlink" title="2024&#x2F;3&#x2F;6"></a>2024&#x2F;3&#x2F;6</h1><p><img src="https://s11.ax1x.com/2024/02/28/pFwiYHf.jpg"></p><p><img src="https://s11.ax1x.com/2024/02/28/pFwiJDP.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-03-05竞赛笔记</title>
      <link href="//post/2024-03-05%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-03-05%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-3-5"><a href="#2024-3-5" class="headerlink" title="2024&#x2F;3&#x2F;5"></a>2024&#x2F;3&#x2F;5</h1><h3 id="P1024"><a href="#P1024" class="headerlink" title="P1024"></a>P1024</h3><p><img src="https://ice.frostsky.com/2024/03/05/100c0ef107db917bb8f7ee8f31def1a6.jpeg" alt="100c0ef107db917bb8f7ee8f31def1a6.jpeg"></p><p><img src="https://ice.frostsky.com/2024/03/05/bc6f32dd479b7df817d74a0050bb5e78.jpeg"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-03-04竞赛笔记</title>
      <link href="//post/2024-03-04%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-03-04%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-3-4"><a href="#2024-3-4" class="headerlink" title="2024&#x2F;3&#x2F;4"></a>2024&#x2F;3&#x2F;4</h1><p><a href="https://imgse.com/i/pFBL2Wt"><img src="https://s11.ax1x.com/2024/03/04/pFBL2Wt.jpg" alt="pFBL2Wt.jpg"></a></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Minecraft-Sep的竞赛笔记书</title>
      <link href="//post/Minecraft-Sep%E7%9A%84%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0%E4%B9%A6.html"/>
      <url>//post/Minecraft-Sep%E7%9A%84%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0%E4%B9%A6.html</url>
      
        <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>本作品的内容借鉴了<a href="https://www.luogu.com.cn/team/12013">中山市华辰实验中学</a>的信息学竞赛学案，同时感谢初一信竞队的<a href="https://www.luogu.com.cn/user/200518">谢老师</a>以及同学们给了我极大的帮助！</p><p>编写：<a href="https://www.luogu.com.cn/user/942118">Minecraft-Sep</a></p><p>图床代理：<a href="https://img.zshfoj.com/">img.zshfoj.com</a></p><p>老师：<a href="https://www.luogu.com.cn/user/200518">Mr.谢</a></p><p>如果有不足之处，敬请多加指正！谢谢！</p><h1 id="1-文件与结构体"><a href="#1-文件与结构体" class="headerlink" title="1.文件与结构体"></a>1.文件与结构体</h1><p><img src="https://img.zshfoj.com/7707e0a2e501c9bf80df368f62f66684f717e968048dda5e2e35041426ef25e5.png"></p><h1 id="2-队列"><a href="#2-队列" class="headerlink" title="2.队列"></a>2.队列</h1><p><img src="https://img.zshfoj.com/58820bdf86fe54db6ac3ec446f6b678c27e7d67e0cd76063f72a4ea733886a75.png"></p><p><img src="https://img.zshfoj.com/1e64e490e059d2dc538d9c5fa393029b90a15cdcff99eeafbab2aa35275834d1.png"></p><h1 id="4-栈"><a href="#4-栈" class="headerlink" title="4.栈"></a>4.栈</h1><p><img src="https://img.zshfoj.com/a759f1cf90390a3924c3d3584894eab6ce48781aa68e6aec2d8410822deeacfd.png"></p><h1 id="5-树与二叉树"><a href="#5-树与二叉树" class="headerlink" title="5.树与二叉树"></a>5.树与二叉树</h1><p><img src="https://img.zshfoj.com/e2353afcd18590147754377060696e22d5b447af12c500b6f89b444c7f9d8bb6.png"></p><p><img src="https://img.zshfoj.com/e6fa7d0b66a7883fce3c275f9b28a2d3b224e20743b15e0fb2c23375bbb433e8.png"></p><h1 id="6-算法（基础）"><a href="#6-算法（基础）" class="headerlink" title="6.算法（基础）"></a>6.算法（基础）</h1><p><img src="https://img.zshfoj.com/6b2100489d84c69aec228d4b2167a70b70c6b54ca3789c50a6b26afdfb5960ca.png"></p><p><img src="https://img.zshfoj.com/5f483ff11e35ed5b6305cb5bba2fe2ad3dafef1936b6c31f957b9d8b35accb5c.png"></p><p><img src="https://img.zshfoj.com/147acaaa3b5de438ce551a23c6065bb187b2b829e7434a418483a6d26df8bfbf.png"></p><p><img src="https://img.zshfoj.com/ef192208e5fa823da4ee6fa04df890a868e4d00b838c4e44d9a55002024cf3f2.png"></p><p><img src="https://img.zshfoj.com/a8fb9cd64e58d35ea5459ce3b7d7681e2e435fc3629543b3368a9af64f46b8a3.png"></p><h1 id="7-贪心、分治、DFS"><a href="#7-贪心、分治、DFS" class="headerlink" title="7.贪心、分治、DFS"></a>7.贪心、分治、DFS</h1><p><img src="https://img.zshfoj.com/a4cc429450baa6d64f25fbb034203fa0f5e417aca78f28a08c44f97f27935655.png"></p><p><img src="https://img.zshfoj.com/1bf4d006e19963a7436fbf9c6a2a9a44c046fa135a1e3bc477641889a334867d.png"></p><p><img src="https://img.zshfoj.com/3bffeb8ea33de6342ec4f7488dfa91dadbf7a19960905303963633ca673cc524.png"></p><p><img src="https://img.zshfoj.com/72f6d60a8cf77c3e4bebe5e5a207e2a67882692bcf5a62735c5485b4b833fcd2.png"></p><h1 id="8-递归与递推"><a href="#8-递归与递推" class="headerlink" title="8.递归与递推"></a>8.递归与递推</h1><p><img src="https://img.zshfoj.com/984a1e35f8cec62ed4515cac4c18339287c0319889a3b329b76119cc94426998.png"></p><p><img src="https://img.zshfoj.com/e3788583d403db574783a889a50a38d52e0c736a97c71192cd6b4e53d5612f7b.png"></p><h1 id="9-BFS"><a href="#9-BFS" class="headerlink" title="9.BFS"></a>9.BFS</h1><p><img src="https://img.zshfoj.com/45ed44773337856930c2bb06f9254cc58227d386e567b6c3c1fa9190ac0b4925.png"></p><p><img src="https://img.zshfoj.com/c153965a49b0eaf5feb77deaa030670be87876ab9d8630044241ea2f88d67961.png"></p><p><img src="https://img.zshfoj.com/75781dd2d170243ab0c67a16b7afcd96cad49d3ca8272e219b31dd226a043261.png"></p><p><img src="https://img.zshfoj.com/376dc19c6f7302d10060fde3285dc16a85a0f674b75eab7e405e47f80d953011.png"></p><p><img src="https://img.zshfoj.com/566c19308b208c54b575b5f35a4981777e0bf6b8526171ec98cad82502a78b6b.png"></p><p><img src="https://img.zshfoj.com/7e1b66de2f16cd0914b7b022f2e6e3840ea0d7698cb9a4a3fee0df1be3849de6.png"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 信息竞赛书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++七大经典排序算法详解</title>
      <link href="//post/CPP%E4%B8%83%E5%A4%A7%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3.html"/>
      <url>//post/CPP%E4%B8%83%E5%A4%A7%E7%BB%8F%E5%85%B8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E8%AF%A6%E8%A7%A3.html</url>
      
        <content type="html"><![CDATA[<h1 id="C-七大经典排序算法详解（转）"><a href="#C-七大经典排序算法详解（转）" class="headerlink" title="C++七大经典排序算法详解（转）"></a>C++七大经典排序算法详解（转）</h1><p>前言：排序是将一组数据，按照指定的顺序或要求来进行排列的过程。是数据结构相关课程和内容较为重要和核心的内容之一，常常作为考试题和面试题目来考察学生和面试者，因此熟练掌握经典的<a href="https://so.csdn.net/so/search?q=%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95&spm=1001.2101.3001.7020">排序算法</a>原理和代码实现是非常重要的<br>本文介绍了几大较为经典的排序算法：插入、希尔、选择、堆、冒泡、快速和归并排序</p><p>各种排序算法动图解析<a href="https://www.cnblogs.com/onepixel/articles/7674659.html">请参考</a></p><p><img src="https://img.zshfoj.com/202ceb2dbe9af3db167f6e079a4317160c7181050244f2d7e6c6bc76bb4ade42.png" alt="202ceb2dbe9af3db167f6e079a4317160c7181050244f2d7e6c6bc76bb4ade42.png (1355×904) (zshfoj.com)"></p><p><strong>各种排序算法复杂度对比</strong><br><a href="https://so.csdn.net/so/search?q=%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F&spm=1001.2101.3001.7020">冒泡排序</a>：两两比较，将大的元素不断后移；<br>选择排序：在一次遍历中，选择最小的元素，和从起始位置开始的元素交换；<br>插入排序：选择一个元素，若此元素比前一个元素大，while循环不断左移找到它的位置。<br>希尔排序：在插入排序的基础之上加入了一个gap步长进行排序<br>归并排序：数组分治，将有序的子数组合并<br>快速排序：在数组中选择一个基准找到它的位置，接着从基准的两边采用同样的方法分治。<br>堆排序：先对整个数组构建大顶堆，接着从根节点开始不断调整。</p><h2 id="冒泡排序法"><a href="#冒泡排序法" class="headerlink" title="冒泡排序法"></a>冒泡排序法</h2><p>冒泡排序是所有排序算法中相对简单且容易理解的算法，它的核心思想：通过for循环不断遍历需要排序的元素，依次比较相邻的两个元素，若不满足指定的顺序（可以从大到小排序，也可以反过来），就交换两个元素，直至完成排序。</p><ul><li>1.比较相邻的元素。如果第一个比第二个大，就交换它们两个；</li><li>2.对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；</li><li>3.针对所有的元素重复以上的步骤，除了最后一个；</li><li>4.重复步骤1~3，直到排序完成。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">BubbleSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">                    <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) </span><br><span class="line">&#123;</span><br><span class="line">                            <span class="type">int</span> temp = arr[j];</span><br><span class="line">                            arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                            arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">                        &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">         &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="冒泡排序优化："><a href="#冒泡排序优化：" class="headerlink" title="冒泡排序优化："></a><strong>冒泡排序优化：</strong></h4><p>用一个bool类型的变量来作为标志位，标记在某一轮遍历中是否发生过元素交换，如果未发生元素交换则证明当前数组已经排序完毕，直接中断此次循环。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">BubbleSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果用一个flag来判断当前数组是否已经有序,有序则退出循环</span></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n - i - <span class="number">1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">                    <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) </span><br><span class="line">&#123;</span><br><span class="line">                            <span class="type">int</span> temp = arr[j];</span><br><span class="line">                            arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                            arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">                            flag = <span class="literal">false</span>;</span><br><span class="line">                     &#125;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">if</span> (flag) <span class="keyword">break</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><p>选择排序(Selection-sort)是一种简单直观的排序算法。它的工作原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。</p><ul><li>1.初始状态：无序区为R[1…n]，有序区为空；</li><li>2.第i趟排序(i&#x3D;1,2,3…n-1)开始时，当前有序区和无序区分别为R[1…i-1]和R(i…n）。该趟排序从当前无序区中-选出关键字最小的记录 R[k]，将它与无序区的第1个记录R交换，使R[1…i]和R[i+1…n)分别变为记录个数增加1个的新有序区和记录个数减少1个的新无序区；</li><li>3.n-1趟结束，数组有序化了。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">SelectionSort</span><span class="params">(<span class="type">int</span> arr[],<span class="type">int</span> len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> min = i;</span><br><span class="line"><span class="keyword">for</span>(j = i + <span class="number">1</span>; j &lt; len; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j] &lt; a[min])</span><br><span class="line">min = j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> temp = a[min];</span><br><span class="line">a[min] = a[i];</span><br><span class="line">a[i] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><p>插入排序（Insertion-Sort）的算法描述是一种简单直观的排序算法。它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。</p><ul><li>1.从第一个元素开始，该元素可以认为已经被排序；</li><li>2.取出下一个元素，在已经排序的元素序列中从后向前扫描；</li><li>3.如果该元素（已排序）大于新元素，将该元素移到下一位置；<br>-4.重复步骤3，直到找到已排序的元素小于或者等于新元素的位置；</li><li>5.将新元素插入到该位置后；</li><li>6.重复步骤2~5。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertSort</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) <span class="comment">//第一个元素作为基准元素，从第二个元素开始把其插到正确的位置</span></span><br><span class="line">   &#123;</span><br><span class="line">  <span class="keyword">if</span>(a[i] &lt; a[i<span class="number">-1</span>]) <span class="comment">//如果第i个元素比前面的元素小</span></span><br><span class="line">  &#123;</span><br><span class="line">      <span class="type">int</span> j = i<span class="number">-1</span>;     <span class="comment">//需要判断第i个元素与前面的多个元素的大小，换成j继续判断</span></span><br><span class="line">          <span class="type">int</span> x = a[i]; <span class="comment">//将第i个元素复制为哨兵</span></span><br><span class="line">      <span class="keyword">while</span>(j &gt;= <span class="number">0</span> &amp;&amp; x &lt; a[j]) <span class="comment">//找哨兵的正确位置，比哨兵大的元素依次后移</span></span><br><span class="line">      &#123;</span><br><span class="line">             a[j+<span class="number">1</span>] = a[j]; </span><br><span class="line">         j--;</span><br><span class="line">      &#125;</span><br><span class="line">      a[j+<span class="number">1</span>] = x;  <span class="comment">//把哨兵插入到正确的位置</span></span><br><span class="line">  &#125;   </span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="希尔排序"><a href="#希尔排序" class="headerlink" title="希尔排序"></a>希尔排序</h2><p>简单插入排序的改进版。它与插入排序的不同之处在于，它会优先比较距离较远的元素。希尔排序又叫缩小增量排序。<br>先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，具体算法描述：</p><ul><li>1.选择一个增量序列t1，t2，…，tk，其中ti&gt;tj，tk&#x3D;1；</li><li>2.按增量序列个数k，对序列进行k 趟排序；</li><li>3.每趟排序，根据对应的增量ti，将待排序列分割成若干长度为m 的子序列，分别对各子表进行直接插入排序。仅增量因子为1 时，整个序列作为一个表来处理，表长度即为整个序列的长度。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">shellSort</span><span class="params">(<span class="type">int</span> a[], <span class="type">int</span> n)</span>  <span class="comment">//a -- 待排序的数组, n -- 数组的长度</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i,j,gap;   <span class="comment">// gap为步长，每次减为原来的一半。</span></span><br><span class="line">    <span class="keyword">for</span> (gap = n / <span class="number">2</span>; gap &gt; <span class="number">0</span>; gap /= <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 共gap个组，对每一组都执行直接插入排序</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span> ;i &lt; gap; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (j = i + gap; j &lt; n; j += gap) </span><br><span class="line">            &#123; </span><br><span class="line">                <span class="comment">// 如果a[j] &lt; a[j-gap]，则寻找a[j]位置，并将后面数据的位置都后移。</span></span><br><span class="line">                <span class="keyword">if</span> (a[j] &lt; a[j - gap])</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">int</span> tmp = a[j];</span><br><span class="line">                    <span class="type">int</span> k = j - gap;</span><br><span class="line">                    <span class="keyword">while</span> (k &gt;= <span class="number">0</span> &amp;&amp; a[k] &gt; tmp)</span><br><span class="line">                    &#123;</span><br><span class="line">                        a[k + gap] = a[k];</span><br><span class="line">                        k -= gap;</span><br><span class="line">                    &#125;</span><br><span class="line">                    a[k + gap] = tmp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">shellsort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> gap = n; gap &gt;= <span class="number">1</span>; gap /= <span class="number">2</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = gap; i &lt; n; i += gap) &#123;</span><br><span class="line"><span class="type">int</span> temp = arr[i];</span><br><span class="line"><span class="type">int</span> pre = i - gap;</span><br><span class="line"><span class="keyword">while</span> (pre &gt;= <span class="number">0</span> &amp;&amp; arr[pre] &gt; temp) &#123;</span><br><span class="line">arr[i] = arr[pre];</span><br><span class="line">pre -= gap;</span><br><span class="line">&#125;</span><br><span class="line">arr[pre + gap] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h2><p>归并排序是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为2-路归并。</p><ul><li>1.把长度为n的输入序列分成两个长度为n&#x2F;2的子序列；</li><li>2.对这两个子序列分别采用归并排序；</li><li>3.将两个排序好的子序列合并成一个最终的排序序列。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 初始版本，升序排序 */</span></span><br><span class="line"><span class="comment">/* 时间复杂度：O(nlbn) 将n个待排序记录归并次数为lbn，一趟归并O(n)</span></span><br><span class="line"><span class="comment">   空间复杂度：O(n) 递归栈最大深度为[lbn] + 1 ，而辅助数组大小为n</span></span><br><span class="line"><span class="comment">   稳定：无论最好还是最坏情况时间复杂度都是O(nlbn)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Merge</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> temp[n]; <span class="comment">// 用一个额外的数组来进行排序</span></span><br><span class="line">    <span class="type">int</span> b = <span class="number">0</span>; <span class="comment">// 额外数组的起始位置</span></span><br><span class="line">    <span class="type">int</span> mid = n / <span class="number">2</span>; <span class="comment">// mid将数组从中间划分，前后两半都有序</span></span><br><span class="line">    <span class="type">int</span> first = <span class="number">0</span>, second = mid; <span class="comment">// 两个有序序列的起始位置</span></span><br><span class="line"> <span class="comment">//以下操作类似于将两个数组合并为一个有序数组</span></span><br><span class="line">    <span class="keyword">while</span> (first &lt; mid &amp;&amp; second &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[first] &lt;= arr[second]) <span class="comment">// 比较两个序列</span></span><br><span class="line">        <span class="comment">//这步操作相当于把第一个数组的值放到用来排序的数组，接着两个指针后移对下一个值进行操作</span></span><br><span class="line">            temp[b++] = arr[first++];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            temp[b++] = arr[second++];</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">while</span>(first &lt; mid)  <span class="comment">// 将剩余子序列复制到辅助序列中</span></span><br><span class="line">            temp[b++] = arr[first++];</span><br><span class="line">    <span class="keyword">while</span>(second &lt; n)</span><br><span class="line">            temp[b++] = arr[second++];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) <span class="comment">// 辅助序列复制到原序列</span></span><br><span class="line">        arr[i] = temp[i];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MergeSort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">1</span>) <span class="comment">// 递归出口</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (n &gt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">MergeSort</span>(arr, n / <span class="number">2</span>); <span class="comment">// 对前半部分进行归并排序</span></span><br><span class="line">        <span class="built_in">MergeSort</span>(arr + n / <span class="number">2</span>, n - n / <span class="number">2</span>); <span class="comment">// 对后半部分进行归并排序</span></span><br><span class="line">        <span class="built_in">Merge</span>(arr, n); <span class="comment">// 归并两部分</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="快速排序（Quick-Sort）"><a href="#快速排序（Quick-Sort）" class="headerlink" title="快速排序（Quick Sort）"></a>快速排序（Quick Sort）</h2><p>快速排序的基本思想：通过一趟排序将待排记录分隔成独立的两部分，其中一部分记录的关键字均比另一部分的关键字小，则可分别对这两部分记录继续进行排序，以达到整个序列有序。<br>快速排序使用分治法来把一个串（list）分为两个子串（sub-lists）。具体算法描述如下：</p><ul><li>1.从数列中挑出一个元素，称为 “基准”（pivot）；</li><li>2.重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作；</li><li>3.递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Quicksort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> low, <span class="type">int</span> high)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (low &lt; high) &#123;</span><br><span class="line"><span class="comment">//双指针，一个指向数组起始，一个指向数组末尾</span></span><br><span class="line"><span class="type">int</span> i = low;</span><br><span class="line"><span class="type">int</span> j = high;</span><br><span class="line"><span class="comment">//将数组的第一个元素作为key寻找它的位置</span></span><br><span class="line"><span class="comment">//key找到它的位置后，以它为分界线，左右两个数组分治</span></span><br><span class="line"><span class="type">int</span> key = arr[i];</span><br><span class="line"><span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line"><span class="comment">//两个指针不相遇，且指针指向的值大于key时，不断左移</span></span><br><span class="line"><span class="keyword">while</span> (i &lt; j &amp;&amp; arr[j] &gt;= key)</span><br><span class="line">j--;</span><br><span class="line"><span class="keyword">if</span> (i &lt; j) arr[i] = arr[j];</span><br><span class="line"><span class="comment">//两个指针不相遇，且指针指向的值小于key时，不断右移</span></span><br><span class="line"><span class="keyword">while</span> (i &lt; j &amp;&amp; arr[i] &lt;= key)</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">if</span> (i &lt; j) arr[j] = arr[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将key放在适合的位置</span></span><br><span class="line">arr[i] = key;</span><br><span class="line"><span class="comment">//分治</span></span><br><span class="line"><span class="built_in">Quicksort</span>(arr, low, i - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">Quicksort</span>(arr, i + <span class="number">1</span>, high);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="堆排序（Heap-Sort）"><a href="#堆排序（Heap-Sort）" class="headerlink" title="堆排序（Heap Sort）"></a>堆排序（Heap Sort）</h2><p>堆排序（Heapsort）是指利用堆这种数据结构所设计的一种排序算法。堆积是一个近似完全二叉树的结构，并同时满足堆积的性质：即子结点的键值或索引总是小于（或者大于）它的父节点。</p><ul><li>1.将初始待排序关键字序列(R1,R2….Rn)构建成大顶堆，此堆为初始的无序区；</li><li>2.将堆顶元素R[1]与最后一个元素R[n]交换，此时得到新的无序区(R1,R2,……Rn-1)和新的有序区(Rn),且满足R[1,2…n-1]&lt;&#x3D;R[n]；</li><li>3.由于交换后新的堆顶R[1]可能违反堆的性质，因此需要对当前无序区(R1,R2,……Rn-1)调整为新堆，然后再次将R[1]与无序区最后一个元素交换，得到新的无序区(R1,R2….Rn-2)和新的有序区(Rn-1,Rn)。不断重复此过程直到有序区的元素个数为n-1，则整个排序过程完成。</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Heapsort.cpp : 定义控制台应用程序的入口点。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdafx.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> a, <span class="type">int</span> b)</span><span class="comment">//交换元素；</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> temp = arr[a];</span><br><span class="line">arr[a] = arr[b];</span><br><span class="line">arr[b] = temp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">adjustHeap</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> i, <span class="type">int</span> length)</span><span class="comment">//调整大顶堆（仅是调整过程，建立在大顶堆已构建的基础上）</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> temp = arr[i];<span class="comment">//先取出当前元素i</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = i * <span class="number">2</span> + <span class="number">1</span>; k&lt;length; k = k * <span class="number">2</span> + <span class="number">1</span>)<span class="comment">//从i结点的左子结点开始，也就是2i+1处开始</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (k + <span class="number">1</span>&lt;length&amp;&amp;arr[k]&lt;arr[k + <span class="number">1</span>])<span class="comment">//如果左子结点小于右子结点，k指向右子结点</span></span><br><span class="line">&#123;</span><br><span class="line">k++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (arr[k] &gt;temp)<span class="comment">//如果子节点大于父节点，将子节点值赋给父节点（不用进行交换）</span></span><br><span class="line">&#123;</span><br><span class="line">arr[i] = arr[k];</span><br><span class="line">i = k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">arr[i] = temp;<span class="comment">//将temp值放到最终的位置</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Heapsort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1.构建大顶堆</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = length / <span class="number">2</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//从第一个非叶子结点从下至上，从右至左调整结构</span></span><br><span class="line"><span class="built_in">adjustHeap</span>(arr, i, length);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = length - <span class="number">1</span>; j&gt;<span class="number">0</span>; j--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">swap</span>(arr, <span class="number">0</span>, j);<span class="comment">//将堆顶元素与末尾元素进行交换</span></span><br><span class="line"><span class="built_in">adjustHeap</span>(arr, <span class="number">0</span>, j);<span class="comment">//重新对堆进行调整</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> arr[<span class="number">9</span>] = &#123; <span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>,<span class="number">10</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span> &#125;;</span><br><span class="line"><span class="built_in">Heapsort</span>(arr, <span class="number">9</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i&lt;<span class="number">9</span>; i++)</span><br><span class="line">cout &lt;&lt; arr[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 排序算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-01-25竞赛笔记</title>
      <link href="//post/2024-01-25%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-01-25%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-1-25"><a href="#2024-1-25" class="headerlink" title="2024&#x2F;1&#x2F;25"></a>2024&#x2F;1&#x2F;25</h1><p><img src="https://img.zshfoj.com/4f8ecb3f9640ebe41587749a117444061682395db183a5a06cc0ace137a5141a.png"></p><p><img src="https://img.zshfoj.com/9a2c2928cc2ac9728a2faa158af13414cdc0ebdd0b7f47d84c2c28b54310f7d5.png"></p><p><img src="https://img.zshfoj.com/84f845d9075e02a2cf6633a1540bf8c55106da5b0be43435b2846012521a2812.png"></p><hr><h3 id="P1781-宇宙总统"><a href="#P1781-宇宙总统" class="headerlink" title="P1781 宇宙总统"></a>P1781 宇宙总统</h3><p><img src="https://img.zshfoj.com/cb33cab1293bb47a3c435ac447527fdd44d0b499497610c5d325b85d9427f242.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">char</span> a[<span class="number">10001</span>],t[<span class="number">10001</span>];<span class="comment">//因为数字会比较大 </span></span><br><span class="line"><span class="type">char</span> b[<span class="number">10001</span>];</span><br><span class="line"><span class="type">int</span> lenx,leny,n,m=<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">cin&gt;&gt;a;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="built_in">sizeof</span>(b));<span class="comment">//初始化 </span></span><br><span class="line">cin&gt;&gt;b;</span><br><span class="line">lenx=<span class="built_in">strlen</span>(a);<span class="comment">//取数位 </span></span><br><span class="line">leny=<span class="built_in">strlen</span>(b);</span><br><span class="line"><span class="keyword">if</span>((lenx&lt;leny)||(lenx==leny&amp;&amp;<span class="built_in">strcmp</span>(a,b)&lt;<span class="number">0</span>))&#123;<span class="comment">//进行交换（排序） </span></span><br><span class="line">   <span class="built_in">strcpy</span>(t,a);</span><br><span class="line"><span class="built_in">strcpy</span>(a,b);</span><br><span class="line"><span class="built_in">strcpy</span>(b,t);</span><br><span class="line">m=i+<span class="number">1</span>;<span class="comment">//序号也要一起变化 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">lenx=<span class="built_in">strlen</span>(a);</span><br><span class="line">cout&lt;&lt;m&lt;&lt;endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;lenx;i++)&#123;</span><br><span class="line">cout&lt;&lt;a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="P1059-NOIP2006-普及组-明明的随机数"><a href="#P1059-NOIP2006-普及组-明明的随机数" class="headerlink" title="P1059 [NOIP2006 普及组] 明明的随机数"></a>P1059 [NOIP2006 普及组] 明明的随机数</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">114514</span>];</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n,s,t=<span class="number">0</span>;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin&gt;&gt;s;</span><br><span class="line"><span class="keyword">if</span>(a[s]) <span class="keyword">continue</span>;<span class="comment">//桶排序</span></span><br><span class="line">a[s]++;</span><br><span class="line">t++; </span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;t&lt;&lt;endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1001</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]) cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="P1068-NOIP2009-普及组-分数线划定"><a href="#P1068-NOIP2009-普及组-分数线划定" class="headerlink" title="P1068 [NOIP2009 普及组] 分数线划定"></a>P1068 [NOIP2009 普及组] 分数线划定</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">player</span>&#123;</span><br><span class="line"><span class="type">int</span> id;</span><br><span class="line"><span class="type">int</span> score;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">player a[n];<span class="comment">//定义a[n]</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) cin&gt;&gt;a[i].id&gt;&gt;a[i].score;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;<span class="comment">//选择排序</span></span><br><span class="line"><span class="type">int</span> k=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=i+<span class="number">1</span>;j&lt;n;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j].score&gt;a[k].score) k=j;</span><br><span class="line"><span class="keyword">if</span>((a[j].score==a[k].score)&amp;&amp;(a[j].id&lt;a[k].id)) k=j;</span><br><span class="line">&#125; </span><br><span class="line">player temp=a[i];</span><br><span class="line">a[i]=a[k];</span><br><span class="line">a[k]=temp;</span><br><span class="line">&#125; </span><br><span class="line"><span class="type">int</span> b=m*<span class="number">1.5</span><span class="number">-1</span>;<span class="comment">//排名为m*150%的学生在数组位置下标</span></span><br><span class="line"><span class="type">int</span> line=a[b].score;<span class="comment">//分数线</span></span><br><span class="line"><span class="type">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i].score&gt;=line) count++;</span><br><span class="line">&#125; </span><br><span class="line">cout&lt;&lt;line&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;count&lt;&lt;endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;count;i++) cout&lt;&lt;a[i].id&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;a[i].score&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="P1116-车厢重组"><a href="#P1116-车厢重组" class="headerlink" title="P1116 车厢重组"></a>P1116 车厢重组</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10010</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n,sum = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++)</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = n ; j &gt; <span class="number">1</span> ; j --)</span><br><span class="line"><span class="keyword">if</span>(a[j] &lt; a[j - <span class="number">1</span>])<span class="comment">//冒泡排序</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">swap</span>(a[j],a[j<span class="number">-1</span>]);</span><br><span class="line">sum ++;<span class="comment">//交换次数++</span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; sum;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="P1583-魔法照片"><a href="#P1583-魔法照片" class="headerlink" title="P1583 魔法照片"></a>P1583 魔法照片</h3><p><img src="https://img.zshfoj.com/f70cdadb9cd83aa560b9f7de49dc8b17c654941686ad85c6839d9b1fa6d14c14.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> e[<span class="number">114514</span>],n,k;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">people</span>&#123;</span><br><span class="line"><span class="type">int</span> w;<span class="comment">//权值</span></span><br><span class="line"><span class="type">int</span> num;<span class="comment">//编号</span></span><br><span class="line"><span class="type">int</span> d;<span class="comment">//类别 </span></span><br><span class="line">&#125;p[<span class="number">1919810</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">cmp</span><span class="params">(<span class="type">const</span> people &amp;a,<span class="type">const</span> people &amp;b)</span></span>&#123;<span class="comment">//自定义结构体排序 </span></span><br><span class="line"><span class="keyword">if</span>(a.w!=b.w) <span class="keyword">return</span> a.w&gt;b.w;<span class="comment">//从大到小 </span></span><br><span class="line"><span class="keyword">return</span> a.num&lt;b.num;<span class="comment">//序号小的优先 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++) cin&gt;&gt;e[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">cin&gt;&gt;p[j].w;<span class="comment">//权值</span></span><br><span class="line">p[j].num=j;<span class="comment">//编号 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(p+<span class="number">1</span>,p+<span class="number">1</span>+n,cmp);<span class="comment">//第一次排序</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">p[i].d=(i<span class="number">-1</span>)%<span class="number">10</span>+<span class="number">1</span>;<span class="comment">//分类</span></span><br><span class="line">p[i].w+=e[p[i].d];<span class="comment">//加上e[i]</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">sort</span>(p+<span class="number">1</span>,p+<span class="number">1</span>+n,cmp);<span class="comment">//第二次排序</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=k;i++) cout&lt;&lt;p[i].num&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><img src="https://img.zshfoj.com/c3240554d8e31295c258aa6e62ac4e707c3edcb6b898bdabe7a45b65e61ad9d1.png"></p><p><img src="https://img.zshfoj.com/dc604edf1a7f302f2498ff50e5a56e872b5e1d55949e41b79f4a9bc288b683e5.png"></p><p><img src="https://img.zshfoj.com/1adbfa5f2e2c60630b5505a7c6c27db57a53449ec7bef6ccf70c8c32c4ee0a3b.png"></p><p><img src="https://img.zshfoj.com/67d1b5216431d4e7e2ed82e4635e822bf6faedc6f068477c7f18112117710105.png"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-01-24竞赛笔记</title>
      <link href="//post/2024-01-24%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-01-24%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-1-24"><a href="#2024-1-24" class="headerlink" title="2024&#x2F;1&#x2F;24"></a>2024&#x2F;1&#x2F;24</h1><p><img src="https://img.zshfoj.com/202ceb2dbe9af3db167f6e079a4317160c7181050244f2d7e6c6bc76bb4ade42.png"></p><h3 id="C-七大经典排序算法详解（代码实现-解析）转"><a href="#C-七大经典排序算法详解（代码实现-解析）转" class="headerlink" title="C++七大经典排序算法详解（代码实现+解析）转"></a><a href="https://zshfoj.com/blog/217/65b05cc7d14038f289ef7f9c">C++七大经典排序算法详解（代码实现+解析）转</a></h3><h3 id="经典排序算法详解-OI-WIKI"><a href="#经典排序算法详解-OI-WIKI" class="headerlink" title="  经典排序算法详解(OI WIKI)"></a><a href="https://zshfoj.com/blog/217/65b06519d14038f289ef8377">  经典排序算法详解(OI WIKI)</a></h3><p><img src="https://img.zshfoj.com/87e6737c582edd1c7b549f3d19e729f54cb6b8ae307ff24376e231d2257004bc.png"><br><img src="https://img.zshfoj.com/951dc7474f0b18e3bf061e405b57ffde32b70559a98b573d92a6efa6a817df27.png"></p><p><img src="https://img.zshfoj.com/6df08cabd86c1427e9a47070f95b6012ed5abccf6cfcb156e2b41b608ae11ffa.png"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-01-23竞赛笔记</title>
      <link href="//post/2024-01-23%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-01-23%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-1-23"><a href="#2024-1-23" class="headerlink" title="2024&#x2F;1&#x2F;23"></a>2024&#x2F;1&#x2F;23</h1><h3 id="【初一算法基础】高精度"><a href="#【初一算法基础】高精度" class="headerlink" title="【初一算法基础】高精度"></a><a href="https://www.luogu.com.cn/training/453058#problems">【初一算法基础】高精度</a></h3><p><img src="https://img.zshfoj.com/98284b9ecaedd9de9a5eb5e0da9a0a7d8a54944ecd2a74a207735d1a15ae0f89.png"></p><p><img src="https://img.zshfoj.com/8633e78c9253397e9eb4da37bc37f3bc16aae0f88f5bb7d116c021e879653eaa.png"></p><p><img src="https://img.zshfoj.com/05052e3cbaa1aadc5674a4b38a4638104153043fd5bdc886c3f48c2b18de6454.png"></p><p><img src="https://img.zshfoj.com/3392db2786afc787c2fe4a68aa60db1e23a4fb5f57c50e62013fe4e9118e34e4.png"></p><h3 id="P2437-蜜蜂路线"><a href="#P2437-蜜蜂路线" class="headerlink" title="P2437 蜜蜂路线"></a>P2437 蜜蜂路线</h3><p><img src="https://img.zshfoj.com/402ac5ffcb87418805e5ed24267666faa51ef87743ae86151c826b4930ad0200.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P2437</span></span><br><span class="line"><span class="comment">//看了一下题解才知道可以用递归c </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> f[<span class="number">10005</span>][<span class="number">20010</span>];<span class="comment">//处理每个方格 </span></span><br><span class="line"><span class="type">int</span> m,n;</span><br><span class="line"><span class="type">int</span> len=<span class="number">1</span>;<span class="comment">//计数器计算总和位数 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">did</span><span class="params">(<span class="type">int</span> k)</span></span>&#123;<span class="comment">//k指阶数</span></span><br><span class="line"><span class="type">int</span> isBigten=<span class="number">0</span>;<span class="comment">//处理进位 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=len;i++) <span class="comment">//开始高精度加法</span></span><br><span class="line">&#123;</span><br><span class="line">f[k][i]=f[k<span class="number">-1</span>][i]+f[k<span class="number">-2</span>][i]+isBigten;<span class="comment">//递推(只是多了一个加进位) </span></span><br><span class="line">isBigten=f[k][i]/<span class="number">10</span>;<span class="comment">//获取进位值</span></span><br><span class="line">f[k][i]%=<span class="number">10</span>;<span class="comment">//得到进位后获取当前位的值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(isBigten&gt;<span class="number">0</span>) <span class="comment">//最后一位可能会进位</span></span><br><span class="line">&#123;</span><br><span class="line">len++;<span class="comment">//位数+1 </span></span><br><span class="line">f[k][len]+=isBigten;<span class="comment">//进位加入总和 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line">f[<span class="number">0</span>][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">f[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">f[<span class="number">2</span>][<span class="number">1</span>]=<span class="number">1</span>;<span class="comment">//递推边界 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n-m+<span class="number">1</span>;i++)<span class="comment">//循环n-m+1次（因为i=2） </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">did</span>(i);<span class="comment">//一个个方格（阶数）开始递推 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i=len;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;f[n-m+<span class="number">1</span>][i];<span class="comment">//输出结果 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="P1601-A-B高精"><a href="#P1601-A-B高精" class="headerlink" title="P1601 A+B高精"></a>P1601 A+B高精</h3><p><img src="https://img.zshfoj.com/fa5ca212d6b476988bef4f26b1fcf6b1d7e07c0a549bceba2d1ba4f0e777ae55.png"></p><p><img src="https://img.zshfoj.com/0442292a32755add1eef254910763eb5e73afd32f2718caade3b9dce1e7f424e.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P1601 A+B高精</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">600</span>],b[<span class="number">600</span>],c[<span class="number">600</span>],k1,k2,k3,maxn;<span class="comment">//处理位数和存储 </span></span><br><span class="line">string a1,b1;<span class="comment">//存储两个加数</span></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;a1&gt;&gt;b1;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=a1.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)<span class="comment">//字符串a1转到数组a存储 </span></span><br><span class="line">&#123;</span><br><span class="line">a[++k1]=a1[i]-<span class="string">&#x27;0&#x27;</span>;<span class="comment">//把高位放在数组的最后 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=b1.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)<span class="comment">//字符串b1转到数组b存储 </span></span><br><span class="line">&#123;</span><br><span class="line">b[++k2]=b1[i]-<span class="string">&#x27;0&#x27;</span>;<span class="comment">//把高位放在数组的最后 </span></span><br><span class="line">&#125;</span><br><span class="line">maxn=<span class="built_in">max</span>(k1,k2);<span class="comment">//最大数的数位 </span></span><br><span class="line">k3=maxn+<span class="number">1</span>;<span class="comment">//初始化结果的数位 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=maxn;i++)</span><br><span class="line">&#123;</span><br><span class="line">c[i]=a[i]+b[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=maxn+<span class="number">1</span>;i++)<span class="comment">//处理加法进位 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(c[i]&gt;=<span class="number">10</span>)<span class="comment">//如果有进位 </span></span><br><span class="line">&#123;</span><br><span class="line">c[i+<span class="number">1</span>]+=c[i]/<span class="number">10</span>;<span class="comment">//加上进位值 </span></span><br><span class="line">c[i]%=<span class="number">10</span>;<span class="comment">//得到进位后当前位的值 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(c[k3]==<span class="number">0</span>)</span><br><span class="line">k3--;<span class="comment">//慢慢消掉结果的位数 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="built_in">max</span>(k3,<span class="number">1</span>);i&gt;=<span class="number">1</span>;i--)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,c[i]);<span class="comment">//输出 </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="P2142-高精度减法"><a href="#P2142-高精度减法" class="headerlink" title="P2142 高精度减法"></a>P2142 高精度减法</h3><p><img src="https://img.zshfoj.com/374ad60048b1bba433bd11e3b4a5b91e0fed648825091b30e034ce23d5cc3fb6.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P2142 高精度减法</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100000</span>]=&#123;<span class="number">0</span>&#125;,b[<span class="number">100000</span>]=&#123;<span class="number">0</span>&#125;,c[<span class="number">100000</span>]=&#123;<span class="number">0</span>&#125;;<span class="comment">//初始化数组 </span></span><br><span class="line"><span class="type">int</span> i,j,k,l,m,n,flag;</span><br><span class="line">string a1,b1,c1;<span class="comment">//存储被减数，减数和差 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">did</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=a[<span class="number">0</span>])&#123;</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;b[i])&#123;<span class="comment">//被减数比减数小 </span></span><br><span class="line">            a[i+<span class="number">1</span>]--;<span class="comment">//前一位-- </span></span><br><span class="line">a[i]+=<span class="number">10</span>;<span class="comment">//当前数位++ </span></span><br><span class="line">        &#125;</span><br><span class="line">        c[i]=a[i]-b[i];<span class="comment">//相应数值相减 </span></span><br><span class="line">        c[<span class="number">0</span>]++;<span class="comment">//位数++</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;a1&gt;&gt;b1;</span><br><span class="line">    a[<span class="number">0</span>]=a1.<span class="built_in">length</span>();<span class="comment">//取长度 </span></span><br><span class="line">    b[<span class="number">0</span>]=b1.<span class="built_in">length</span>();</span><br><span class="line">    <span class="keyword">if</span>(a[<span class="number">0</span>]&lt;b[<span class="number">0</span>] || (a[<span class="number">0</span>]==b[<span class="number">0</span>] &amp;&amp; a1&lt;b1))&#123;<span class="comment">//比较大小，如果被减数小于减数就交换 </span></span><br><span class="line">        c1=b1;b1=a1;a1=c1;</span><br><span class="line">        <span class="built_in">swap</span>(a[<span class="number">0</span>],b[<span class="number">0</span>]);<span class="comment">//交换两数的位数 </span></span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;-&quot;</span>;<span class="comment">//因为交换了，输出“-”</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=a[<span class="number">0</span>];i++) &#123;<span class="comment">//字符串a1转到数组a存储</span></span><br><span class="line">    a[i]=a1[a[<span class="number">0</span>]-i]-<span class="string">&#x27;0&#x27;</span>;<span class="comment">//最高位放到末尾 </span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=b[<span class="number">0</span>];i++)&#123;<span class="comment">//字符串b1转到数组b存储</span></span><br><span class="line">    b[i]=b1[b[<span class="number">0</span>]-i]-<span class="string">&#x27;0&#x27;</span>;<span class="comment">//最高位放到末尾 </span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">did</span>();<span class="comment">//减法运算 </span></span><br><span class="line">    <span class="keyword">while</span>(c[c[<span class="number">0</span>]]==<span class="number">0</span>&amp;&amp;c[<span class="number">0</span>]&gt;<span class="number">1</span>) c[<span class="number">0</span>]--;<span class="comment">//判断0是否有用,因为使用 “c[0]&gt;1”减会减多，从而使c[0]=0</span></span><br><span class="line">    <span class="keyword">for</span>(i=c[<span class="number">0</span>];i&gt;=<span class="number">1</span>;i--) &#123;</span><br><span class="line">    cout&lt;&lt;c[i];<span class="comment">//倒序输出</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="高精度乘法"><a href="#高精度乘法" class="headerlink" title="高精度乘法"></a>高精度乘法</h3><p><img src="https://img.zshfoj.com/113d8ff3da26e35cb345586f7bf46c5e310446840e55b9beda607d29addbfbff.png"></p><p><img src="https://img.zshfoj.com/6e9540f4919251246233f4b952e136ff91c6b86c714aa6041a7e289d7f67bc40.png"></p><p><img src="https://img.zshfoj.com/27c083e006ace0bdb29598f6d1bfac2dd5fa0aa12a62211d21f8851c99456c1b.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P1303</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">char</span> a1[<span class="number">2000</span>],b1[<span class="number">2000</span>];</span><br><span class="line"><span class="type">int</span> a[<span class="number">20005</span>]=&#123;<span class="number">0</span>&#125;,b[<span class="number">20005</span>]=&#123;<span class="number">0</span>&#125;,c[<span class="number">40010</span>]=&#123;<span class="number">0</span>&#125;;<span class="comment">//保存数子的数组 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> la,lb,lc=<span class="number">0</span>;</span><br><span class="line">cin&gt;&gt;a1&gt;&gt;b1;</span><br><span class="line">la=<span class="built_in">strlen</span>(a1);<span class="comment">//取位数 </span></span><br><span class="line">lb=<span class="built_in">strlen</span>(b1);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=la;i++)<span class="comment">//a1保存到数组a </span></span><br><span class="line">&#123;</span><br><span class="line">a[la-i]=a1[i]-<span class="string">&#x27;0&#x27;</span>;<span class="comment">//最高为防末尾 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;lb;i++)<span class="comment">//b1保存到数组b</span></span><br><span class="line">&#123;</span><br><span class="line">b[lb-i]=b1[i]-<span class="string">&#x27;0&#x27;</span>;<span class="comment">//最高为防末尾 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=la;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=lb;j++)</span><br><span class="line">&#123;</span><br><span class="line">c[i+j<span class="number">-1</span>]=a[i]*b[j]+c[i+j<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">if</span>(c[i+j<span class="number">-1</span>]&gt;=<span class="number">10</span>)<span class="comment">//如果有进位 </span></span><br><span class="line">&#123;</span><br><span class="line">c[i+j]+=c[i+j<span class="number">-1</span>]/<span class="number">10</span>;<span class="comment">//加上进位的值 </span></span><br><span class="line">c[i+j<span class="number">-1</span>]=c[i+j<span class="number">-1</span>]%<span class="number">10</span>;<span class="comment">//更新当前位的值 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">lc=la+lb;<span class="comment">//加 </span></span><br><span class="line"><span class="keyword">while</span>(c[lc]==<span class="number">0</span> &amp;&amp; lc&gt;<span class="number">1</span>)<span class="comment">//毁灭积的位数 </span></span><br><span class="line">&#123;</span><br><span class="line">lc--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=lc;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;c[i];<span class="comment">//输出 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="P1009-阶乘之和"><a href="#P1009-阶乘之和" class="headerlink" title="P1009 阶乘之和"></a>P1009 阶乘之和</h3><p><img src="https://img.zshfoj.com/470e795e9f5fa55912e709e6d64b4f2072f9ad19ef30525f362d206f3d13f361.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,a[<span class="number">1000</span>],b[<span class="number">1000</span>],len;<span class="comment">//保存阶乘过程中的数字数组 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">jiechenghe</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> x=<span class="number">0</span>;<span class="comment">//进位 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">1000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">b[i]=b[i]+a[i]+x;<span class="comment">//加上所有阶乘并处理进位 </span></span><br><span class="line">x=b[i]/<span class="number">10</span>;<span class="comment">//取进位 </span></span><br><span class="line">b[i]%=<span class="number">10</span>;<span class="comment">//得到进位后获取当前位的值</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">jiecheng</span><span class="params">(<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> x=<span class="number">0</span>;<span class="comment">//进位 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>; i&lt;<span class="number">1000</span>; i++)&#123;</span><br><span class="line">a[i]=a[i]*y+x;<span class="comment">//阶乘 </span></span><br><span class="line">x=a[i]/<span class="number">10</span>;<span class="comment">//取进位 </span></span><br><span class="line">a[i]%=<span class="number">10</span>;<span class="comment">//得到进位后获取当前位的值</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line">a[<span class="number">0</span>]=<span class="number">1</span>;<span class="comment">//1!为1 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;<span class="comment">//阶乘解决 </span></span><br><span class="line"><span class="built_in">jiecheng</span>(i);<span class="comment">//每一步都计算并相加 </span></span><br><span class="line"><span class="built_in">jiechenghe</span>();</span><br><span class="line">&#125;</span><br><span class="line">len=<span class="number">1000</span>;<span class="comment">//一个定值，为去掉0做准备 </span></span><br><span class="line"><span class="keyword">while</span>(b[len]==<span class="number">0</span>)&#123;</span><br><span class="line">len--;<span class="comment">//去掉多余的0 </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=len;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">cout&lt;&lt;b[i];<span class="comment">//逆向输出 </span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.zshfoj.com/ebe838dc09a7cd0ec444f48c84c815ecdcb4eb3930e0608d7057468e28c513a9.png"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-01-22竞赛笔记</title>
      <link href="//post/2024-01-22%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-01-22%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-1-22"><a href="#2024-1-22" class="headerlink" title="2024&#x2F;1&#x2F;22"></a>2024&#x2F;1&#x2F;22</h1><h3 id="拯救oibh总部"><a href="#拯救oibh总部" class="headerlink" title="拯救oibh总部"></a>拯救oibh总部</h3><p><img src="https://img.zshfoj.com/7f76619eb7120580dc6e9b01652cf37df69bf6c1b992db305839dc3814b687ff.png"></p><h3 id="奇怪的电梯"><a href="#奇怪的电梯" class="headerlink" title="奇怪的电梯"></a>奇怪的电梯</h3><p><strong>DFS</strong><br><img src="https://img.zshfoj.com/eb60efbdb92395effabba94cca37466884fdf15e0d8b9646446b81353206e2eb.png"><br><strong>BFS</strong><br><img src="https://img.zshfoj.com/9ca5d5527bbe1647f200343a0a10d5a506a41bb6d6497a7a9c03cc4ac5cf4b09.png"></p><h3 id="马的遍历"><a href="#马的遍历" class="headerlink" title="马的遍历"></a>马的遍历</h3><p><img src="https://img.zshfoj.com/23ca4057d8809ec48755a7892bf53628a64e96073dd7d783c9617b4d3076f183.png"></p><p><img src="https://img.zshfoj.com/e9b285b26bebc51a5664acf41c8b1085a37cff8153d3c7433815886baebf09a0.png"></p><h3 id="P2895"><a href="#P2895" class="headerlink" title="P2895"></a>P2895</h3><p><img src="https://img.zshfoj.com/f447cf15578570f8a476eebec40a8613fa18ea8d6e4cefa3bdb3f81d0a935bd4.png"></p><p><img src="https://img.zshfoj.com/ebb19c397fadea87563af388c2ffe70b200bb04e4c8592eb49236faca819aa83.png"></p><h3 id="未写完暂存-写完自动销毁"><a href="#未写完暂存-写完自动销毁" class="headerlink" title="未写完暂存(写完自动销毁)"></a><a href="https://www.luogu.com.cn/paste/16xrotm9">未写完暂存(写完自动销毁)</a></h3>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-01-21自学笔记</title>
      <link href="//post/2024-01-21%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-01-21%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-1-21-study"><a href="#2024-1-21-study" class="headerlink" title="2024&#x2F;1&#x2F;21 study"></a>2024&#x2F;1&#x2F;21 study</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">queue&lt;类型&gt;Q;</span><br><span class="line">Q.<span class="built_in">push</span>(最初状态);</span><br><span class="line"><span class="keyword">while</span>(!Q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">类型 u=Q.<span class="built_in">front</span>(); Q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="keyword">for</span>(枚举所有可扩展到的状态)&#123;</span><br><span class="line"><span class="keyword">if</span>(满足入队条件)&#123;</span><br><span class="line">Q.<span class="built_in">push</span>(状态); <span class="comment">//维护某些必要信息 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">//BFS(队列方式)模板</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P1135 奇怪的电梯</span></span><br><span class="line"><span class="comment">//借鉴了一下他人告诉我的题面意思（一开始看不懂又想不明白）awa</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"><span class="type">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> qe[<span class="number">10001</span>];<span class="comment">//存放每个层数的信息</span></span><br><span class="line"><span class="type">int</span> n,a,b;</span><br><span class="line"><span class="type">int</span> ans;</span><br><span class="line"><span class="comment">//int ans[101][101];//记录到达每个点需要的步数</span></span><br><span class="line"><span class="type">bool</span> f[<span class="number">511</span>];<span class="comment">//标记已走点</span></span><br><span class="line">queue&lt;node&gt; q;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">q.<span class="built_in">push</span>((node)&#123;a,<span class="number">0</span>&#125;);<span class="comment">//开始入队,从a开始</span></span><br><span class="line">f[a]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;<span class="comment">//队列不为空</span></span><br><span class="line"><span class="type">int</span> x=q.<span class="built_in">front</span>().x,y=q.<span class="built_in">front</span>().y;<span class="comment">//取队头</span></span><br><span class="line"><span class="keyword">if</span>(x==b) <span class="keyword">return</span> y;</span><br><span class="line">q.<span class="built_in">pop</span>();<span class="comment">//提前出队</span></span><br><span class="line"><span class="type">int</span> xx=x+qe[x];<span class="comment">//上楼</span></span><br><span class="line"><span class="type">int</span> yy=y+<span class="number">1</span>;<span class="comment">//下楼</span></span><br><span class="line"><span class="keyword">if</span>(xx&gt;=<span class="number">1</span>&amp;&amp;xx&lt;=n&amp;&amp;!f[xx])<span class="comment">//如果满足上楼条件</span></span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>((node)&#123;xx,yy&#125;);<span class="comment">//入队</span></span><br><span class="line">f[xx]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">xx-=<span class="number">2</span>*qe[x];<span class="comment">//由于上去了，就要减去</span></span><br><span class="line"><span class="keyword">if</span>(xx&gt;=<span class="number">1</span>&amp;&amp;xx&lt;=n&amp;&amp;!f[xx])<span class="comment">//如果满足下楼条件</span></span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>((node)&#123;xx,yy&#125;);<span class="comment">//入队</span></span><br><span class="line">f[xx]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;a&gt;&gt;b;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">cin&gt;&gt;qe[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,<span class="built_in">bfs</span>());</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//禁止抄袭！</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-01-20自学笔记</title>
      <link href="//post/2024-01-20%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-01-20%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-1-20-自我学习-练习"><a href="#2024-1-20-自我学习-练习" class="headerlink" title="2024&#x2F;1&#x2F;20 自我学习&#x2F;练习"></a>2024&#x2F;1&#x2F;20 自我学习&#x2F;练习</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P1506 拯救oibh总部</span></span><br><span class="line"><span class="comment">//自己写的（经历了惨痛教训后，记住：数组开大亿点!!!）</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="type">int</span> y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> sum;<span class="comment">//求和</span></span><br><span class="line">queue&lt;node&gt; q;<span class="comment">//用struct类型，这样就可以即可直接使用队头数据了</span></span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;,dy[<span class="number">4</span>] = &#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>&#125;;<span class="comment">//枚举方向</span></span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">bool</span> f[<span class="number">505</span>][<span class="number">505</span>];<span class="comment">//记录已经走过的点</span></span><br><span class="line"><span class="type">char</span> a[<span class="number">505</span>][<span class="number">505</span>];<span class="comment">//保存地图</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>((i==<span class="number">1</span>||i==n||j==<span class="number">1</span>||j==m)&amp;&amp;a[i][j]==<span class="string">&#x27;0&#x27;</span>)&#123;<span class="comment">//判断总部有没有被淹</span></span><br><span class="line">q.<span class="built_in">push</span>((node)&#123;i,j&#125;);<span class="comment">//将(x,y)加入队尾</span></span><br><span class="line">f[i][j]=<span class="number">1</span>;<span class="comment">//标记访问</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(q.<span class="built_in">size</span>()&gt;<span class="number">0</span>)&#123;<span class="comment">//队列不为空时操作</span></span><br><span class="line">node now=q.<span class="built_in">front</span>();<span class="comment">//获取队首元素的值</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;<span class="comment">//枚举四个方向</span></span><br><span class="line"><span class="type">int</span> xx=now.x+dx[i];</span><br><span class="line"><span class="type">int</span> yy=now.y+dy[i];</span><br><span class="line"><span class="keyword">if</span>(xx&gt;=<span class="number">1</span>&amp;&amp;xx&lt;=n&amp;&amp;yy&gt;=<span class="number">1</span>&amp;&amp;yy&lt;=m&amp;&amp;a[xx][yy]==<span class="string">&#x27;0&#x27;</span>&amp;&amp;!f[xx][yy])&#123;<span class="comment">//如果下一步可走</span></span><br><span class="line">q.<span class="built_in">push</span>((node)&#123;xx,yy&#125;);<span class="comment">//又双叒叕是加入队尾</span></span><br><span class="line">f[xx][yy]=<span class="number">1</span>;<span class="comment">//又双叒叕是标记已访问</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">cin&gt;&gt;a[i][j];<span class="comment">//输入地图</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">bfs</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i][j]==<span class="string">&#x27;0&#x27;</span>&amp;&amp;!f[i][j]) sum++;<span class="comment">//如果是总部并且没访问过就总和+1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//禁止抄袭！</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P1506 拯救oibh总部</span></span><br><span class="line"><span class="comment">//他人的代码</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">bool</span> vis[<span class="number">505</span>][<span class="number">505</span>];</span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>] = &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[<span class="number">4</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Point</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> x;</span><br><span class="line">    <span class="type">int</span> y;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">char</span> a[<span class="number">505</span>][<span class="number">505</span>];</span><br><span class="line">queue&lt;Point&gt; q;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>((i==<span class="number">1</span>||i==n||j==<span class="number">1</span>||j==m)&amp;&amp;a[i][j]==<span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                q.<span class="built_in">push</span>((Point)&#123;i,j&#125;);</span><br><span class="line">                vis[i][j]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q.<span class="built_in">size</span>()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        Point now=q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="type">int</span> nx=now.x+dx[i],ny=now.y+dy[i];</span><br><span class="line">            <span class="keyword">if</span>(nx&gt;=<span class="number">1</span>&amp;&amp;nx&lt;=n&amp;&amp;ny&gt;=<span class="number">1</span>&amp;&amp;ny&lt;=m&amp;&amp;!vis[nx][ny]&amp;&amp;a[nx][ny]==<span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">                q.<span class="built_in">push</span>((Point)&#123;nx,ny&#125;);</span><br><span class="line">                vis[nx][ny]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;=n; i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    <span class="built_in">bfs</span>();</span><br><span class="line">    <span class="type">int</span> sum=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">            <span class="keyword">if</span>(a[i][j]==<span class="string">&#x27;0&#x27;</span>&amp;&amp;!vis[i][j])</span><br><span class="line">                sum++;</span><br><span class="line">    cout&lt;&lt;sum;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="学案"><a href="#学案" class="headerlink" title="学案"></a><a href="https://www.luogu.com.cn/paste/rwk6ahsh">学案</a></h3><p><img src="https://img.zshfoj.com/8f2cdd9d54de89399f0147d083c0878da56bee2271d4bcc2a53db40203c22e90.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P1443 马的遍历</span></span><br><span class="line"><span class="comment">//看了一下题解才成的(不知道为啥MLE,差点把我电脑搞崩了)，查阅了queue的资料</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span>&#123;</span><br><span class="line">    <span class="type">int</span> x,y;<span class="comment">//结构体存储x,y坐标 </span></span><br><span class="line">&#125;;</span><br><span class="line">queue&lt;node&gt; q;<span class="comment">//定义一个结构体类型的队列q</span></span><br><span class="line"><span class="type">int</span> ans[<span class="number">402</span>][<span class="number">402</span>];<span class="comment">//记录每个坐标需要的步数</span></span><br><span class="line"><span class="type">int</span> n,m,sx,sy;</span><br><span class="line"><span class="type">int</span> horse[<span class="number">8</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">2</span>,<span class="number">1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">2</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">2</span>&#125;,&#123;<span class="number">-2</span>,<span class="number">1</span>&#125;,&#123;<span class="number">-2</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">-2</span>&#125;,&#123;<span class="number">1</span>,<span class="number">-2</span>&#125;,&#123;<span class="number">2</span>,<span class="number">-1</span>&#125;&#125;;<span class="comment">//马下一步能走的八个方向</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (!q.<span class="built_in">empty</span>())&#123;<span class="comment">//队列不为空</span></span><br><span class="line">        node er=q.<span class="built_in">front</span>();<span class="comment">//取队头元素</span></span><br><span class="line">        <span class="type">int</span> xx=er.x;</span><br><span class="line"><span class="type">int</span> yy=er.y;<span class="comment">//将队首的坐标分别赋值给xx,yy变量</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)&#123;<span class="comment">//枚举8个马的走向</span></span><br><span class="line">            <span class="type">int</span> x=xx+horse[i][<span class="number">0</span>];</span><br><span class="line"><span class="type">int</span> y=yy+horse[i][<span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> sh=ans[xx][yy];<span class="comment">//所需步数初始值就等于走到当前位置所需的步数</span></span><br><span class="line">            <span class="keyword">if</span> (x&lt;<span class="number">1</span> || x&gt;n ||y&lt;<span class="number">1</span> ||y&gt;m ||ans[x][y]!=<span class="number">-1</span>) <span class="keyword">continue</span>;<span class="comment">//超出访问限制</span></span><br><span class="line">            ans[x][y]=sh+<span class="number">1</span>;<span class="comment">//未continue，这个坐标可以入队，步数+1</span></span><br><span class="line">            node tmp=&#123;x,y&#125;;</span><br><span class="line">            q.<span class="built_in">push</span>(tmp);<span class="comment">//下一步将会走到的新坐标加入队列末尾 </span></span><br><span class="line">        &#125; </span><br><span class="line">        q.<span class="built_in">pop</span>();<span class="comment">//将队首元素取出</span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;sx&gt;&gt;sy;</span><br><span class="line">    <span class="built_in">memset</span>(ans,<span class="number">-1</span>,<span class="built_in">sizeof</span>(ans));<span class="comment">//初始化步数为-1</span></span><br><span class="line">    node tmp=&#123;sx,sy&#125;;<span class="comment">//存放马的初始位置</span></span><br><span class="line">    q.<span class="built_in">push</span>(tmp);<span class="comment">//将初始位置入队</span></span><br><span class="line">    ans[sx][sy]=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">bfs</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%-5d&quot;</span>,ans[i][j]);<span class="comment">//用标准方法输出，左对齐占5个场宽 </span></span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;<span class="comment">//一行结束输出换行 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//禁止抄袭！</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-01-19竞赛笔记</title>
      <link href="//post/2024-01-19%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-01-19%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-1-19"><a href="#2024-1-19" class="headerlink" title="2024&#x2F;1&#x2F;19"></a>2024&#x2F;1&#x2F;19</h1><p><img src="https://img.zshfoj.com/c617d1f233a088963afd49fa617587e64e623d94df6d522ed0b87c665024dd75.png"></p><p><img src="https://img.zshfoj.com/06dc68f9436eefb917a396b364594d5ce62828add4f362c6d99dfcea86664a9e.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//T172312 走迷宫</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="type">int</span> y;</span><br><span class="line"><span class="type">int</span> s;<span class="comment">//步数 </span></span><br><span class="line">&#125; que[<span class="number">10001</span>];</span><br><span class="line"><span class="type">int</span> head,tail,r,s,p,q;</span><br><span class="line"><span class="type">char</span> c[<span class="number">1001</span>][<span class="number">1001</span>];<span class="comment">//保存地图</span></span><br><span class="line"><span class="type">bool</span> flag;<span class="comment">//标记是否达到目标点，0未到，1已到</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,b[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>&#125;;<span class="comment">//可走的组合</span></span><br><span class="line"><span class="type">bool</span> f[<span class="number">1001</span>][<span class="number">1001</span>];<span class="comment">//记录已走的点</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(head&lt;tail)<span class="comment">//队列不为空时操作</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">3</span>;i++)<span class="comment">//枚举四个方向</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> xx=que[head].x+a[i];</span><br><span class="line"><span class="type">int</span> yy=que[head].y+b[i];</span><br><span class="line"><span class="keyword">if</span>(xx&gt;=<span class="number">1</span>&amp;&amp;xx&lt;=r&amp;&amp;yy&gt;=<span class="number">1</span>&amp;&amp;yy&lt;=s&amp;&amp;c[xx][yy]==<span class="string">&#x27;.&#x27;</span>&amp;&amp;!f[xx][yy])<span class="comment">//判断x,y下一步是否可走且是否走过</span></span><br><span class="line">&#123;</span><br><span class="line">f[xx][yy]=<span class="number">1</span>;<span class="comment">//标记已走</span></span><br><span class="line">que[tail].x=xx;</span><br><span class="line">que[tail].y=yy; <span class="comment">//更新xx和yy的值</span></span><br><span class="line">que[tail].s=que[head].s+<span class="number">1</span>;<span class="comment">//步数是父亲的步数+1</span></span><br><span class="line">tail++; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(xx==p&amp;&amp;yy==q)<span class="comment">//如果找到目标点</span></span><br><span class="line">&#123;</span><br><span class="line">flag=<span class="number">1</span>;<span class="comment">//标记已完成</span></span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//退出</span></span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">head++;<span class="comment">//head++才能对后面的点进行二次扩展 </span></span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;r&gt;&gt;s;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=r;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=s;j++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;c[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">p=r;q=s;<span class="comment">//终点坐标</span></span><br><span class="line">head=<span class="number">1</span>;tail=<span class="number">2</span>;</span><br><span class="line">que[tail].x=<span class="number">1</span>; que[tail].y=<span class="number">1</span>; que[tail].s=<span class="number">0</span>+<span class="number">1</span>;</span><br><span class="line">tail++;</span><br><span class="line">f[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="built_in">bfs</span>();</span><br><span class="line">cout&lt;&lt;que[tail<span class="number">-1</span>].s&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//禁止直接抄袭！打击这种行为！</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//B3625 迷宫寻路</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="type">int</span> y;</span><br><span class="line"><span class="type">int</span> s;<span class="comment">//步数 </span></span><br><span class="line">&#125; que[<span class="number">10001</span>];</span><br><span class="line"><span class="type">int</span> head,tail,r,s,p,q;</span><br><span class="line"><span class="type">char</span> c[<span class="number">1001</span>][<span class="number">1001</span>];<span class="comment">//保存地图</span></span><br><span class="line"><span class="type">bool</span> flag;<span class="comment">//标记是否达到目标点，0未到，1已到</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,b[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>&#125;;<span class="comment">//可走的组合</span></span><br><span class="line"><span class="type">bool</span> f[<span class="number">1001</span>][<span class="number">1001</span>];<span class="comment">//记录已走的点</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(head&lt;tail)<span class="comment">//队列不为空时操作</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">3</span>;i++)<span class="comment">//枚举四个方向</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> xx=que[head].x+a[i];</span><br><span class="line"><span class="type">int</span> yy=que[head].y+b[i];</span><br><span class="line"><span class="keyword">if</span>(xx&gt;=<span class="number">1</span>&amp;&amp;xx&lt;=r&amp;&amp;yy&gt;=<span class="number">1</span>&amp;&amp;yy&lt;=s&amp;&amp;c[xx][yy]==<span class="string">&#x27;.&#x27;</span>&amp;&amp;!f[xx][yy])<span class="comment">//判断x,y下一步是否可走且是否走过</span></span><br><span class="line">&#123;</span><br><span class="line">f[xx][yy]=<span class="number">1</span>;<span class="comment">//标记已走</span></span><br><span class="line">que[tail].x=xx;</span><br><span class="line">que[tail].y=yy; <span class="comment">//更新xx和yy的值</span></span><br><span class="line">que[tail].s=que[head].s+<span class="number">1</span>;<span class="comment">//步数是父亲的步数+1</span></span><br><span class="line">tail++; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(xx==p&amp;&amp;yy==q)<span class="comment">//如果找到目标点</span></span><br><span class="line">&#123;</span><br><span class="line">flag=<span class="number">1</span>;<span class="comment">//标记已完成</span></span><br><span class="line"><span class="keyword">break</span>;<span class="comment">//退出</span></span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">head++;<span class="comment">//head++才能对后面的点进行二次扩展 </span></span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;r&gt;&gt;s;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=r;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=s;j++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;c[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">p=r;q=s;<span class="comment">//终点坐标</span></span><br><span class="line">head=<span class="number">1</span>;tail=<span class="number">2</span>;</span><br><span class="line">que[tail].x=<span class="number">1</span>; que[tail].y=<span class="number">1</span>; que[tail].s=<span class="number">0</span>+<span class="number">1</span>;</span><br><span class="line">tail++;</span><br><span class="line">f[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="built_in">bfs</span>();</span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">1</span>) cout&lt;&lt;<span class="string">&quot;Yes&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;No&quot;</span>; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//禁止直接抄袭！打击这种行为！</span></span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P1451 求细胞数量</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,m,dx[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">-1</span>&#125;,dy[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;,a[<span class="number">100</span>][<span class="number">100</span>];<span class="comment">//保存地图，枚举方向 </span></span><br><span class="line"><span class="type">int</span> sum,q[<span class="number">10000</span>][<span class="number">4</span>],h,t;<span class="comment">//模拟BFS的数组 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">fun</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">h=<span class="number">1</span>,t=<span class="number">1</span>;</span><br><span class="line">q[h][<span class="number">1</span>]=x;</span><br><span class="line">q[h][<span class="number">2</span>]=y;<span class="comment">//初始化 </span></span><br><span class="line"><span class="keyword">while</span>(h&lt;=t)<span class="comment">//队列不为空 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)<span class="comment">//枚举方向 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> xx=q[h][<span class="number">1</span>]+dx[i];</span><br><span class="line"><span class="type">int</span> yy=q[h][<span class="number">2</span>]+dy[i];</span><br><span class="line"><span class="keyword">if</span>(a[xx][yy]!=<span class="number">0</span>&amp;&amp;xx&gt;=<span class="number">1</span>&amp;&amp;xx&lt;=n&amp;&amp;yy&gt;=<span class="number">1</span>&amp;&amp;yy&lt;=m)<span class="comment">//如果满足移动条件 </span></span><br><span class="line">&#123;</span><br><span class="line">t++;<span class="comment">//尾部++ </span></span><br><span class="line">q[t][<span class="number">1</span>]=xx;</span><br><span class="line">q[t][<span class="number">2</span>]=yy;</span><br><span class="line">a[xx][yy]=<span class="number">0</span>;<span class="comment">//地图中标记为0 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">h++;<span class="comment">//继续循环，head++ </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%1d&quot;</span>,&amp;a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i][j]!=<span class="number">0</span>)<span class="comment">//是其他数字时 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fun</span>(i,j);</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;sum;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//禁止直接抄袭！打击这种行为！</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img.zshfoj.com/afb383b5b8fa2d6c90ee69bb29614ffa0c949920e4a7e1f0bafc92ae32c65fc8.png"><br><img src="https://img.zshfoj.com/230eba837132e779f9d7ed273a7cdca26b14d3cbb19de76eb7c512470bee6550.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//B3626 跳跃机器人</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line"><span class="type">int</span> s[<span class="number">1000010</span>];<span class="comment">//记录步数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(s,<span class="number">-1</span>,<span class="built_in">sizeof</span>(s));<span class="comment">//初始化数组</span></span><br><span class="line">q.<span class="built_in">push</span>(<span class="number">1</span>);<span class="comment">//bot原位</span></span><br><span class="line">s[<span class="number">1</span>]=<span class="number">0</span>;<span class="comment">//七点不需要步数</span></span><br><span class="line"><span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;<span class="comment">//队列不为空</span></span><br><span class="line"><span class="type">int</span> t=q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();<span class="comment">//提前出队第一元素</span></span><br><span class="line"><span class="keyword">if</span>(t==n)&#123;<span class="comment">//到达n</span></span><br><span class="line">cout&lt;&lt;s[n];</span><br><span class="line"><span class="keyword">return</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(t<span class="number">-1</span>&gt;=<span class="number">1</span>&amp;&amp;t<span class="number">-1</span>&lt;=n&amp;&amp;s[t<span class="number">-1</span>]==<span class="number">-1</span>)&#123;<span class="comment">//x-1</span></span><br><span class="line">q.<span class="built_in">push</span>(t<span class="number">-1</span>);</span><br><span class="line">s[t<span class="number">-1</span>]=s[t]+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(t+<span class="number">1</span>&gt;=<span class="number">1</span>&amp;&amp;t+<span class="number">1</span>&lt;=n&amp;&amp;s[t+<span class="number">1</span>]==<span class="number">-1</span>)&#123;<span class="comment">//x+1</span></span><br><span class="line">q.<span class="built_in">push</span>(t+<span class="number">1</span>);</span><br><span class="line">s[t+<span class="number">1</span>]=s[t]+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">2</span>*t&gt;=<span class="number">1</span>&amp;&amp;<span class="number">2</span>*t&lt;=n&amp;&amp;s[t*<span class="number">2</span>]==<span class="number">-1</span>)&#123;<span class="comment">//2x</span></span><br><span class="line">q.<span class="built_in">push</span>(t*<span class="number">2</span>);</span><br><span class="line">s[t*<span class="number">2</span>]=s[t]+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="built_in">bfs</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="【初一算法基础】宽搜"><a href="#【初一算法基础】宽搜" class="headerlink" title="【初一算法基础】宽搜"></a><a href="https://www.luogu.com.cn/training/449732#problems">【初一算法基础】宽搜</a></h3>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-01-18竞赛笔记</title>
      <link href="//post/2024-01-18%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-01-18%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-1-18"><a href="#2024-1-18" class="headerlink" title="2024&#x2F;1&#x2F;18"></a>2024&#x2F;1&#x2F;18</h1><p><img src="https://img.zshfoj.com/9c8803dba42d06f66016c528a0b436be10ee876d904a411d96acb646cb30a65f.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P1596 [USACO10OCT] Lake Counting S</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> dx[<span class="number">8</span>]=&#123;<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="type">int</span> dy[<span class="number">8</span>]=&#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;;<span class="comment">//各个方向</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">1001</span>][<span class="number">1001</span>];<span class="comment">//保存地图</span></span><br><span class="line"><span class="type">int</span> n,m,ans;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">7</span>;i++)<span class="comment">//向8个方向枚举</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> xx=x+dx[i];</span><br><span class="line"><span class="type">int</span> yy=y+dy[i];</span><br><span class="line"><span class="keyword">if</span>(a[xx][yy]==<span class="number">1</span>)<span class="comment">//只要找到联通得水坑就标记为0 </span></span><br><span class="line">&#123;</span><br><span class="line">a[xx][yy]=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">dfs</span>(xx,yy);</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line"><span class="type">char</span> c;</span><br><span class="line">cin&gt;&gt;c;</span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">&#x27;.&#x27;</span>) a[i][j]=<span class="number">0</span>;<span class="comment">//1为水坑，0为旱地 </span></span><br><span class="line"><span class="keyword">else</span> a[i][j]=<span class="number">1</span>; <span class="comment">//判断出界</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;<span class="comment">//枚举每一个点</span></span><br><span class="line"><span class="keyword">if</span>(a[i][j]==<span class="number">1</span>)&#123;</span><br><span class="line">ans++;</span><br><span class="line"><span class="built_in">dfs</span>(i,j);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P1025 [NOIP2001 提高组] 数的划分 </span></span><br><span class="line"><span class="comment">//DFS做法</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,k,sum;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> s,<span class="type">int</span> t,<span class="type">int</span> l)</span><span class="comment">//last表示前一个状态 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s&gt;k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(t==n) sum++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=l;i&lt;=n-t;i++)<span class="comment">//剪枝优化，因为当前格子可选数最大只有n-t </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">dfs</span>(s+<span class="number">1</span>,t+i,i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">cout&lt;&lt;sum;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P2036 [COCI 2008/2009 #2] PERKET</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,a[<span class="number">1001</span>],b[<span class="number">1001</span>],ans=<span class="number">0x3f3f3f3f</span>;<span class="comment">//ans初始化，此处约等于INT_MAX</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> x,<span class="type">int</span> y)</span> <span class="comment">//i是第几种配料，x,y代表酸,苦度</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(i&gt;n)&#123;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">1</span> &amp;&amp; y==<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">ans=<span class="built_in">min</span>(<span class="built_in">abs</span>(x-y),ans);<span class="comment">//取绝对值与当前答案进行比较 </span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">dfs</span>(i+<span class="number">1</span>,x*a[i],y+b[i]);<span class="comment">//添加第i种配料 ,总的酸度为每一种配料的酸度总乘积</span></span><br><span class="line"><span class="built_in">dfs</span>(i+<span class="number">1</span>,x,y); <span class="comment">//不添加第i中配料</span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">cin&gt;&gt;a[i]&gt;&gt;b[i];</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>);<span class="comment">//配料编号，酸度(乘法默认初值为1)，苦度（默认初值为0）</span></span><br><span class="line">cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.zshfoj.com/dc2f95243127126c80bd1c7457134c04ba692f6331b90f5a25b3f2993ac54157.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P1784 数独</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> g[<span class="number">9</span>][<span class="number">9</span>];</span><br><span class="line"><span class="type">int</span> cell[<span class="number">3</span>][<span class="number">3</span>][<span class="number">10</span>],row[<span class="number">9</span>][<span class="number">10</span>],col[<span class="number">9</span>][<span class="number">10</span>];<span class="comment">//保存数独信息</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(y==<span class="number">9</span>) x++,y=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">9</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(g[x][y]) <span class="keyword">return</span> <span class="built_in">dfs</span>(x,y+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)<span class="comment">//开始判断行、列、宫</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(cell[x/<span class="number">3</span>][y/<span class="number">3</span>][i] || row[x][i] || col[y][i]) <span class="keyword">continue</span>;</span><br><span class="line">g[x][y]=i;<span class="comment">//保存</span></span><br><span class="line">cell[x/<span class="number">3</span>][y/<span class="number">3</span>][i]=row[x][i]=col[y][i]=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">dfs</span>(x,y+<span class="number">1</span>)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">g[x][y]=<span class="number">0</span>;<span class="comment">//回溯</span></span><br><span class="line">cell[x/<span class="number">3</span>][y/<span class="number">3</span>][i]=row[x][i]=col[y][i]=<span class="literal">false</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">while(false)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">cout&lt;&lt;&quot;renjiheinu&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)<span class="comment">//输入数独 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">9</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;g[i][j];</span><br><span class="line"><span class="keyword">if</span>(g[i][j])<span class="comment">//如果已经有数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x=g[i][j];</span><br><span class="line">cell[i/<span class="number">3</span>][j/<span class="number">3</span>][x]=row[i][x]=col[j][x]=<span class="literal">true</span>;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化 </span></span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">9</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;<span class="number">9</span>;j++) cout&lt;&lt;g[i][j]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="P1238-走迷宫"><a href="#P1238-走迷宫" class="headerlink" title="P1238 走迷宫"></a>P1238 走迷宫</h4><p><img src="https://img.zshfoj.com/d7058b8d45aac12b069ace26171de48653773f296497ea8d5f9e414da5a7b3c7.png"></p><h4 id="P1605-迷宫"><a href="#P1605-迷宫" class="headerlink" title="P1605 迷宫"></a>P1605 迷宫</h4><p><img src="https://img.zshfoj.com/093cc1d4e1f3c037aa34ae3233e569c00126a55d9149b40d458e6c2253a5a3d3.png"></p><h3 id="【初一算法基础】深搜与回溯"><a href="#【初一算法基础】深搜与回溯" class="headerlink" title="【初一算法基础】深搜与回溯"></a><a href="https://www.luogu.com.cn/training/449286#problems">【初一算法基础】深搜与回溯</a></h3><h3 id="BFS（图论）-OI-Wiki"><a href="#BFS（图论）-OI-Wiki" class="headerlink" title="BFS（图论）-OI Wiki"></a><a href="https://oi-wiki.org/graph/bfs/">BFS（图论）-OI Wiki</a></h3>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-01-17竞赛笔记</title>
      <link href="//post/2024-01-17%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-01-17%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-1-17"><a href="#2024-1-17" class="headerlink" title="2024&#x2F;1&#x2F;17"></a>2024&#x2F;1&#x2F;17</h1><h3 id="广度优先搜索-BFS-学习笔记-XiaoQuQu"><a href="#广度优先搜索-BFS-学习笔记-XiaoQuQu" class="headerlink" title="广度优先搜索 BFS 学习笔记 - XiaoQuQu"></a><a href="https://www.cnblogs.com/XiaoQuQu/p/16184338.html">广度优先搜索 BFS 学习笔记 - XiaoQuQu</a></h3><h3 id="深度优先搜索-DFS-学习笔记-XiaoQuQu"><a href="#深度优先搜索-DFS-学习笔记-XiaoQuQu" class="headerlink" title="深度优先搜索 DFS 学习笔记 - XiaoQuQu"></a><a href="https://www.cnblogs.com/XiaoQuQu/p/16184310.html">深度优先搜索 DFS 学习笔记 - XiaoQuQu</a></h3><p><img src="https://img.zshfoj.com/09f00d054290eb72e539fabd98ce32850bb96c9485c8e50e9361a0147f9f467c.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P2392 kkksc03考前临时抱佛脚</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">5000</span>][<span class="number">10000</span>];</span><br><span class="line"><span class="type">int</span> sum,ans,lft,rght;</span><br><span class="line"><span class="type">int</span> s[<span class="number">5000</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> dep)</span><span class="comment">//x表示第几个科目,dep表示第几题</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(dep&gt;s[x])</span><br><span class="line">&#123;</span><br><span class="line">sum=<span class="built_in">min</span>(sum,<span class="built_in">max</span>(lft,rght));</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">lft+=a[x][dep];<span class="comment">//左脑尝试</span></span><br><span class="line"><span class="built_in">dfs</span>(x,dep+<span class="number">1</span>);</span><br><span class="line">lft-=a[x][dep];<span class="comment">//回溯</span></span><br><span class="line">rght+=a[x][dep];<span class="comment">//右脑</span></span><br><span class="line"><span class="built_in">dfs</span>(x,dep+<span class="number">1</span>);</span><br><span class="line">rght-=a[x][dep];<span class="comment">//回溯 </span></span><br><span class="line"> &#125; </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)</span><br><span class="line">cin&gt;&gt;s[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)<span class="comment">//科目</span></span><br><span class="line">&#123;</span><br><span class="line">sum=INT_MAX;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=s[i];j++)<span class="comment">//题目</span></span><br><span class="line">cin&gt;&gt;a[i][j];<span class="comment">//每题耗时</span></span><br><span class="line"><span class="built_in">dfs</span>(i,<span class="number">1</span>);</span><br><span class="line">ans+=sum;<span class="comment">//sum有该科目完成的最小耗时，统计进ans</span></span><br><span class="line"> </span><br><span class="line"> &#125; </span><br><span class="line"> cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P1025 [NOIP2001 提高组] 数的划分--递归做法 </span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> l,k;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">se</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> k,<span class="type">int</span> min)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(k==<span class="number">1</span>) <span class="keyword">return</span> n&gt;=k;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> s=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=min;i&lt;=n/k;i++)</span><br><span class="line">&#123;</span><br><span class="line">s+=<span class="built_in">se</span>(n-i,k<span class="number">-1</span>,i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">cin&gt;&gt;l&gt;&gt;k;</span><br><span class="line">cout&lt;&lt;<span class="built_in">se</span>(l,k,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//P2404自然数的拆分问题</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10001</span>]=&#123;<span class="number">1</span>&#125;,n,total;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(<span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=t;i++)<span class="comment">//拆分方案 </span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i!=t) cout&lt;&lt;a[i]&lt;&lt;<span class="string">&quot;+&quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;a[i]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">se</span><span class="params">(<span class="type">int</span> s,<span class="type">int</span> t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=a[t<span class="number">-1</span>];i&lt;=s;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i&lt;n)&#123;<span class="comment">//i要大于等于前一位数,且不超过n</span></span><br><span class="line">a[t]=i;<span class="comment">//保存结果</span></span><br><span class="line">s-=i;<span class="comment">//继续拆分</span></span><br><span class="line"><span class="keyword">if</span>(s==<span class="number">0</span>) <span class="built_in">print</span>(t) ;<span class="comment">//拆分结束，输出</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">se</span>(s,t+<span class="number">1</span>);<span class="comment">//继续搜索</span></span><br><span class="line">s+=i;<span class="comment">//回溯：加上拆分的数 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="built_in">se</span>(n,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-01-16竞赛笔记</title>
      <link href="//post/2024-01-16%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-01-16%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://img.zshfoj.com/bd2b0382ba5529dabc458f1413801f545421f5aeb9d43f335754fcc3ffa21a87.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//n皇后问题</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10001</span>];<span class="comment">//保存皇后的位置</span></span><br><span class="line"><span class="type">int</span> b[<span class="number">10001</span>],c[<span class="number">10001</span>],d[<span class="number">10001</span>];<span class="comment">//标记同列和对角线</span></span><br><span class="line"><span class="type">int</span> sum;<span class="comment">//方案总数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">sum++;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;a[i];</span><br><span class="line"><span class="keyword">if</span>(i!=<span class="number">8</span>) cout&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">s</span><span class="params">(<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">8</span>;j++)<span class="comment">//试探八个位置</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!b[j] &amp;&amp; !c[i+j] &amp;&amp; !d[i-j+<span class="number">7</span>])<span class="comment">//下标不为负，+7</span></span><br><span class="line">&#123;</span><br><span class="line">a[i]=j;</span><br><span class="line">b[j]=<span class="number">1</span>;<span class="comment">//j列被占用</span></span><br><span class="line">c[i+j]=<span class="number">1</span>;<span class="comment">//对角线被占用</span></span><br><span class="line">d[i-j+<span class="number">7</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">8</span>) <span class="built_in">print</span>();<span class="comment">//放完</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">s</span>(i+<span class="number">1</span>);</span><br><span class="line">b[j]=<span class="number">0</span>;<span class="comment">//回溯</span></span><br><span class="line">c[i+j]=<span class="number">0</span>;</span><br><span class="line">d[i-j+<span class="number">7</span>]=<span class="number">0</span>; </span><br><span class="line"> &#125; </span><br><span class="line"> &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">s</span>(<span class="number">1</span>);</span><br><span class="line">cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://s11.ax1x.com/2024/01/16/pFFKw0e.jpg" alt="pFFKw0e.jpg"></p><p><img src="https://img.zshfoj.com/fb82a8b54e5676290cc855a714217014ba91a3a344f95f9f663195ca205e7474.png"></p><p><img src="/file/217/HYFwp7Ri07zXf75yv9YB2.png" alt="image"></p><p><img src="https://img.zshfoj.com/46c49fa4997899d68f514fc235215f484c672d01ead812da4bb9e435e7dcdd60.png"></p><p><img src="/file/217/LkypoVi1sPWaClKSEIs4M.png" alt="image"></p><p><img src="https://img.zshfoj.com/cca51bb5d0d96405ae4b3edb66453f1fda0d5aef703f0dc8e99eace0907d6dc8.png"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024-01-15竞赛笔记</title>
      <link href="//post/2024-01-15%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2024-01-15%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2024-1-15"><a href="#2024-1-15" class="headerlink" title="2024&#x2F;1&#x2F;15"></a>2024&#x2F;1&#x2F;15</h1><p><img src="https://img.zshfoj.com/804451babccbb261b1a51ab94cc11b2ccc965d54763d3b801184df5fb4af9733.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Luogu P1706 全排列问题</span></span><br><span class="line"><span class="comment">//By OIWIKI 2024/1/15</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">bool</span> vis[<span class="number">50</span>];  <span class="comment">// 访问标记数组</span></span><br><span class="line"><span class="type">int</span> a[<span class="number">50</span>];     <span class="comment">// 排列数组，按顺序储存当前搜索结果</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> step)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (step == n + <span class="number">1</span>) &#123;  <span class="comment">// 边界</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">      cout &lt;&lt; <span class="built_in">setw</span>(<span class="number">5</span>) &lt;&lt; a[i];  <span class="comment">// 保留5个场宽</span></span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (vis[i] == <span class="number">0</span>) &#123;  <span class="comment">// 判断数字i是否在正在进行的全排列中</span></span><br><span class="line">      vis[i] = <span class="number">1</span>;</span><br><span class="line">      a[step] = i;</span><br><span class="line">      <span class="built_in">dfs</span>(step + <span class="number">1</span>);</span><br><span class="line">      vis[i] = <span class="number">0</span>;  <span class="comment">// 这一步不使用该数 置0后允许下一步使用</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  cin &gt;&gt; n;</span><br><span class="line">  <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img.zshfoj.com/5f947ebe53901a18207e1076499d81ec93af19442b5e66f33c5373c2613acd32.png"></p><p><img src="https://img.zshfoj.com/de442aa477a26576a267379e4ac4c44640ad1a91a71f1154aedd9c07edd90564.png"><br><img src="https://img.zshfoj.com/830b8609a5f2943afb6b3d33eb972b975062ecf72ec02237ac4165bdd4983429.png"><br><img src="https://img.zshfoj.com/8b3c2a5cf5a11cbd7fc0b1b14fc4ad93a6f5153dee114259a7908753b1f99951.png"></p><p><img src="https://img.zshfoj.com/7edef84bf84d7da85295834bd03de7fe3ec6d019c7d17ffeafd3a1bc754faebd.png"></p><h3 id="DFS-Deep-First-Search-深度优先搜索（转）"><a href="#DFS-Deep-First-Search-深度优先搜索（转）" class="headerlink" title="DFS-Deep First Search-深度优先搜索（转）"></a><a href="https://zshfoj.com/blog/217/65a4a9e33df3e13f3e721254">DFS-Deep First Search-深度优先搜索（转）</a></h3>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023-12-23竞赛笔记</title>
      <link href="//post/2023-12-23%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2023-12-23%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2023-12-23"><a href="#2023-12-23" class="headerlink" title="2023&#x2F;12&#x2F;23"></a>2023&#x2F;12&#x2F;23</h1><p><img src="https://img.zshfoj.com/ef521c0ca2756ec4ede5b178d9e75ad72ef89cf3247ce2a930028290b49639df.png" alt="x"></p><p><img src="https://img.zshfoj.com/d62b93818009330b8d64110b39bb51b5d6208be99280217acb0a407b19d75dd0.png"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023-12-12竞赛笔记</title>
      <link href="//post/2023-12-12%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2023-12-12%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2023-12-12"><a href="#2023-12-12" class="headerlink" title="2023&#x2F;12&#x2F;12"></a>2023&#x2F;12&#x2F;12</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// P1192 台阶问题</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> mod=<span class="number">1e5</span>+<span class="number">3</span>;</span><br><span class="line"><span class="type">int</span> n,k,f[<span class="number">1000001</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">f[<span class="number">0</span>]=f[<span class="number">1</span>]=<span class="number">1</span>;<span class="comment">//递推边界</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=k;j++)</span><br><span class="line"><span class="keyword">if</span>(i&gt;=j)<span class="comment">//当楼梯数大于迈步数 </span></span><br><span class="line">f[i]=(f[i]+f[i-j])%mod;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;f[n]&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img.zshfoj.com/d7326e952335b2d618c52f46f7eba7f73befa9ad351f2a382648b7952dc5461c.png"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023-12-11竞赛笔记</title>
      <link href="//post/2023-12-11%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2023-12-11%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2023-12-11"><a href="#2023-12-11" class="headerlink" title="2023&#x2F;12&#x2F;11"></a>2023&#x2F;12&#x2F;11</h1><p><a href="https://imgse.com/i/piWmGQK"><img src="https://z1.ax1x.com/2023/12/11/piWmGQK.jpg" alt="piWmGQK.jpg"></a></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GESP编程能力等级认证标四级（复习要点）</title>
      <link href="//post/GESP%E7%BC%96%E7%A8%8B%E8%83%BD%E5%8A%9B%E7%AD%89%E7%BA%A7%E8%AE%A4%E8%AF%81%E6%A0%87%E5%9B%9B%E7%BA%A7%EF%BC%88%E5%A4%8D%E4%B9%A0%E8%A6%81%E7%82%B9%EF%BC%89.html"/>
      <url>//post/GESP%E7%BC%96%E7%A8%8B%E8%83%BD%E5%8A%9B%E7%AD%89%E7%BA%A7%E8%AE%A4%E8%AF%81%E6%A0%87%E5%9B%9B%E7%BA%A7%EF%BC%88%E5%A4%8D%E4%B9%A0%E8%A6%81%E7%82%B9%EF%BC%89.html</url>
      
        <content type="html"><![CDATA[<h1 id="2023-12-8-个人笔记"><a href="#2023-12-8-个人笔记" class="headerlink" title="2023&#x2F;12&#x2F;8 个人笔记"></a>2023&#x2F;12&#x2F;8 个人笔记</h1><h3 id="主题：GESP编程能力等级认证标四级（复习要点）"><a href="#主题：GESP编程能力等级认证标四级（复习要点）" class="headerlink" title="主题：GESP编程能力等级认证标四级（复习要点）"></a>主题：GESP编程能力等级认证标四级（复习要点）</h3><p><strong>考试大纲</strong></p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/gcx46xwf.png"></p><p><strong>知识点复习</strong></p><h3 id="1-形参和实参"><a href="#1-形参和实参" class="headerlink" title="1.形参和实参"></a>1.形参和实参</h3><p>定义：</p><p>形参：形参出现在函数定义中，在整个函数体内都可以使用，离开该函数则不能使用。<br>实参：实参出现在主调函数中，进入被调函数后，实参变量也不能使用。</p><p>网上很多大佬都是这么讲的，认为举个例子更容易理解：</p><p>假设定义了这样一个函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在主函数中这么调用它</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">f</span>(n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>那么int f(int x)中的 x x x就是形参（在函数中定义，并只能在此函数中使用的参数）</li><li>主函数中f(n)的 n n n就是实参（将数据传入函数中的参数）</li></ul><hr><ol start="2"><li>作用域</li></ol><p>作用域，顾名思义，就是变量或常量的作用范围（可使用范围）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">cout &lt;&lt; k;<span class="comment">//这句话的作用域就是当前行，仅在当前行执行</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">……</span><br><span class="line">cout &lt;&lt; k;   <span class="comment">//加入花括号后，这句话的作用范围就变到了这个for循环语句内，即两个花括号以内</span></span><br><span class="line">……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-函数的定义和调用"><a href="#2-函数的定义和调用" class="headerlink" title="2.函数的定义和调用"></a>2.函数的定义和调用</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>(返回值类型) <span class="built_in">f</span>(自定义函数名) （<span class="function"><span class="type">int</span> <span class="title">x</span><span class="params">(形参列表)</span>）</span>&#123;</span><br><span class="line"></span><br><span class="line">      主体</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> <span class="built_in">x</span>(表达式);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>返回值类型 ：一个函数可以返回一个值的类型</li><li>函数名：给函数起的自定义名称</li><li>参数列表：使用该函数时，传入的数据</li><li>函数体语句：花括号内的代码，函数内需要执行的语句</li><li>return表达式： 和返回值类型挂钩，函数执行完后，返回相应的数据</li></ul><h3 id="3-排序的概念和稳定性"><a href="#3-排序的概念和稳定性" class="headerlink" title="3.排序的概念和稳定性"></a>3.排序的概念和稳定性</h3><table><thead><tr><th align="center">排序算法</th><th align="center">时间复杂度</th><th align="center">空间复杂度</th><th align="center">稳定性</th></tr></thead><tbody><tr><td align="center">冒泡</td><td align="center">$O ( n 2 ) O(n^2) O(n2)$</td><td align="center">$O ( 1 ) O(1) O(1)$</td><td align="center">稳定</td></tr><tr><td align="center">插入</td><td align="center">$O ( n 2 ) O(n^2) O(n2)$</td><td align="center">$O ( 1 ) O(1) O(1)$</td><td align="center">稳定</td></tr><tr><td align="center">选择</td><td align="center">$O ( n 2 ) O(n^2) O(n2)$</td><td align="center">$O ( 1 ) O(1) O(1)$</td><td align="center">不稳定</td></tr></tbody></table><h3 id="4-文件重定向与文件读写"><a href="#4-文件重定向与文件读写" class="headerlink" title="4.文件重定向与文件读写"></a>4.文件重定向与文件读写</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">freopen</span>(<span class="string">&quot;a.in&quot;</span>,<span class="string">&quot;r&quot;</span>,stdin)<span class="comment">//将输入重定向为从文件a.in读入</span></span><br><span class="line"><span class="built_in">freopen</span>(<span class="string">&quot;a.out&quot;</span>,<span class="string">&quot;w&quot;</span>,stdout)<span class="comment">//将输出重定向为从输出到文件a.out中</span></span><br><span class="line"><span class="comment">//下面的程序任然使用标准输入输出（scanf，printf）</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="function">ifstream <span class="title">cin</span><span class="params">(<span class="string">&quot;a.in&quot;</span>)</span></span>;<span class="comment">//在main（）函数里定义较好</span></span><br><span class="line"><span class="function">ofsteam <span class="title">cout</span><span class="params">(<span class="string">&quot;a.out&quot;</span>)</span></span>;</span><br><span class="line"><span class="comment">//下面标准输入输出</span></span><br></pre></td></tr></table></figure><h3 id="5-冒泡、选择、插入排序"><a href="#5-冒泡、选择、插入排序" class="headerlink" title="5. 冒泡、选择、插入排序"></a>5. 冒泡、选择、插入排序</h3><h3 id="一、冒泡"><a href="#一、冒泡" class="headerlink" title="一、冒泡"></a>一、冒泡</h3><p><strong>定义</strong></p><ul><li>冒泡排序（英语：Bubble sort）是一种简单的排序算法。由于在算法的执行过程中，较小的元素像是气泡般慢慢「浮」到数列的顶端，故叫做冒泡排序</li></ul><p><strong>过程</strong></p><ul><li><p>它的工作原理是每次检查相邻两个元素，如果前面的元素与后面的元素满足给定的排序条件，就将相邻两个元素交换。当没有相邻的元素需要交换时，排序就完成了。</p></li><li><p>经过 $i$ 次扫描后，数列的末尾 $i$ 项必然是最大的 $i$ 项，因此冒泡排序最多需要扫描 $n-1$ 遍数组就能完成排序。</p></li></ul><p><strong>性质</strong></p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/a32vty0q.png"></p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/qxames0h.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 假设数组的大小是 n + 1，冒泡排序从数组下标 1 开始</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubble_sort</span><span class="params">(<span class="type">int</span> *a, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">  <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">  <span class="keyword">while</span> (flag) &#123;</span><br><span class="line">    flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">      <span class="keyword">if</span> (a[i] &gt; a[i + <span class="number">1</span>]) &#123;</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="type">int</span> t = a[i];</span><br><span class="line">        a[i] = a[i + <span class="number">1</span>];</span><br><span class="line">        a[i + <span class="number">1</span>] = t;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二、选择"><a href="#二、选择" class="headerlink" title="二、选择"></a>二、选择</h3><p><strong>定义</strong><br>选择排序（英语：Selection sort）是一种简单直观的排序算法。它的工作原理是每次找出第 $i$ 小的元素（也就是 $A_{i..n}$ 中最小的元素），然后将这个元素与数组第 i 个位置上的元素交换。</p><p><img src="https://oi-wiki.org/basic/images/selection-sort-animate.svg"></p><p><strong>性质</strong></p><ul><li><p>稳定性 由于 swap（交换两个元素）操作的存在，选择排序是一种不稳定的排序算法。</p></li><li><p>时间复杂度 选择排序的最优时间复杂度、平均时间复杂度和最坏时间复杂度均为 $O(n^2)$。</p></li></ul><p><strong>代码实现</strong></p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/fty5rs2j.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">selection_sort</span><span class="params">(<span class="type">int</span>* a, <span class="type">int</span> n)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; ++i) &#123;</span><br><span class="line">    <span class="type">int</span> ith = i;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">      <span class="keyword">if</span> (a[j] &lt; a[ith]) &#123;</span><br><span class="line">        ith = j;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    std::<span class="built_in">swap</span>(a[i], a[ith]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三、插入"><a href="#三、插入" class="headerlink" title="三、插入"></a>三、插入</h3><p><strong>定义</strong></p><ul><li><p>插入排序（英语：Insertion sort）是一种简单直观的排序算法。它的工作原理为将待排列元素划分为「已排序」和「未排序」两部分，每次从「未排序的」元素中选择一个插入到「已排序的」元素中的正确位置。</p></li><li><p>一个与插入排序相同的操作是打扑克牌时，从牌桌上抓一张牌，按牌面大小插到手牌后，再抓下一张牌。</p></li></ul><p><img src="https://oi-wiki.org/basic/images/insertion-sort-animate.svg"></p><p><strong>性质</strong></p><ul><li><p>稳定性  插入排序是一种稳定的排序算法。</p></li><li><p>时间复杂度  插入排序的最优时间复杂度为 $O(n)$，在数列几乎有序时效率很高。插入排序的最坏时间复杂度和平均时间复杂度都为 $O(n^2)$。</p></li></ul><p><strong>代码实现</strong></p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/sh9hfkoo.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertion_sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; len; ++i) &#123;</span><br><span class="line">    <span class="type">int</span> key = arr[i];</span><br><span class="line">    <span class="type">int</span> j = i - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; arr[j] &gt; key) &#123;</span><br><span class="line">      arr[j + <span class="number">1</span>] = arr[j];</span><br><span class="line">      j--;</span><br><span class="line">    &#125;</span><br><span class="line">    arr[j + <span class="number">1</span>] = key;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>折半插入排序</strong></p><ul><li><p>插入排序还可以通过二分算法优化性能，在排序元素数量较多时优化的效果比较明显。</p></li><li><p>时间复杂度  折半插入排序与直接插入排序的基本思想是一致的，折半插入排序仅对插入排序时间复杂度中的常数进行了优化，所以优化后的时间复杂度仍然不变。</p></li></ul><p><strong>代码</strong></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertion_sort</span><span class="params">(<span class="type">int</span> arr[], <span class="type">int</span> len)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (len &lt; <span class="number">2</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i != len; ++i) &#123;</span><br><span class="line">    <span class="type">int</span> key = arr[i];</span><br><span class="line">    <span class="keyword">auto</span> index = <span class="built_in">upper_bound</span>(arr, arr + i, key) - arr;</span><br><span class="line">    <span class="comment">// 使用 memmove 移动元素，比使用 for 循环速度更快，时间复杂度仍为 O(n)</span></span><br><span class="line">    <span class="built_in">memmove</span>(arr + index + <span class="number">1</span>, arr + index, (i - index) * <span class="built_in">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">    arr[index] = key;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 竞赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> GESP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023-12-08竞赛笔记</title>
      <link href="//post/2023-12-08%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2023-12-08%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2023-12-8"><a href="#2023-12-8" class="headerlink" title="2023&#x2F;12&#x2F;8"></a>2023&#x2F;12&#x2F;8</h1><p><a href="https://www.luogu.com.cn/paste/ezkicu9o">GESP C++等级测试四级2023 年 6 ⽉</a></p><hr><h3 id="希尔排序（递减增量排序）"><a href="#希尔排序（递减增量排序）" class="headerlink" title="希尔排序（递减增量排序）"></a>希尔排序（递减增量排序）</h3><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/5wm6aw4i.png"><br><img src="https://cdn.luogu.com.cn/upload/image_hosting/uz4vkwph.png"><br><img src="https://cdn.luogu.com.cn/upload/image_hosting/e917hqto.png"><br><img src="https://cdn.luogu.com.cn/upload/image_hosting/a94h2v16.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">shell_sort</span><span class="params">(T array[], <span class="type">int</span> length)</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> h = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">while</span> (h &lt; length / <span class="number">3</span>) &#123;</span><br><span class="line">    h = <span class="number">3</span> * h + <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (h &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = h; i &lt; length; i++) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="type">int</span> j = i; j &gt;= h &amp;&amp; array[j] &lt; array[j - h]; j -= h) &#123;</span><br><span class="line">        std::<span class="built_in">swap</span>(array[j], array[j - h]);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    h = h / <span class="number">3</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/c74uwr88.png"></p><p>代码1（数组）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge</span><span class="params">(<span class="type">const</span> <span class="type">int</span> *a, <span class="type">size_t</span> aLen, <span class="type">const</span> <span class="type">int</span> *b, <span class="type">size_t</span> bLen, <span class="type">int</span> *c)</span> </span>&#123;</span><br><span class="line">  <span class="type">size_t</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> (i &lt; aLen &amp;&amp; j &lt; bLen) &#123;</span><br><span class="line">    <span class="keyword">if</span> (b[j] &lt; a[i]) &#123;  <span class="comment">// &lt;!&gt; 先判断 b[j] &lt; a[i]，保证稳定性</span></span><br><span class="line">      c[k] = b[j];</span><br><span class="line">      ++j;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      c[k] = a[i];</span><br><span class="line">      ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    ++k;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 此时一个数组已空，另一个数组非空，将非空的数组并入 c 中</span></span><br><span class="line">  <span class="keyword">for</span> (; i &lt; aLen; ++i, ++k) c[k] = a[i];</span><br><span class="line">  <span class="keyword">for</span> (; j &lt; bLen; ++j, ++k) c[k] = b[j];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代码2（指针）</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge</span><span class="params">(<span class="type">const</span> <span class="type">int</span> *aBegin, <span class="type">const</span> <span class="type">int</span> *aEnd, <span class="type">const</span> <span class="type">int</span> *bBegin,</span></span></span><br><span class="line"><span class="params"><span class="function">           <span class="type">const</span> <span class="type">int</span> *bEnd, <span class="type">int</span> *c)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (aBegin != aEnd &amp;&amp; bBegin != bEnd) &#123;</span><br><span class="line">    <span class="keyword">if</span> (*bBegin &lt; *aBegin) &#123;</span><br><span class="line">      *c = *bBegin;</span><br><span class="line">      ++bBegin;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      *c = *aBegin;</span><br><span class="line">      ++aBegin;</span><br><span class="line">    &#125;</span><br><span class="line">    ++c;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (; aBegin != aEnd; ++aBegin, ++c) *c = *aBegin;</span><br><span class="line">  <span class="keyword">for</span> (; bBegin != bEnd; ++bBegin, ++c) *c = *bBegin;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//也可使用 &lt;algorithm&gt; 库的 merge 函数，用法与上述指针式写法的相同。</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/3uwny2jd.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> *a, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (r - l &lt;= <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="comment">// 分解</span></span><br><span class="line">  <span class="type">int</span> mid = l + ((r - l) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">  <span class="built_in">merge_sort</span>(a, l, mid), <span class="built_in">merge_sort</span>(a, mid, r);</span><br><span class="line">  <span class="comment">// 合并</span></span><br><span class="line">  <span class="type">int</span> tmp[<span class="number">1024</span>] = &#123;&#125;;  <span class="comment">// 请结合实际情况设置 tmp 数组的长度（与 a 相同），或使用</span></span><br><span class="line">                       <span class="comment">// vector；先将合并的结果放在 tmp 里，再返回到数组 a</span></span><br><span class="line">  <span class="built_in">merge</span>(a + l, a + mid, a + mid, a + r, tmp + l);  <span class="comment">// pointer-style merge</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">int</span> i = l; i &lt; r; ++i) a[i] = tmp[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/7trlv4o9.png"></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> *a, <span class="type">size_t</span> n)</span> </span>&#123;</span><br><span class="line">  <span class="type">int</span> tmp[<span class="number">1024</span>] = &#123;&#125;;  <span class="comment">// 请结合实际情况设置 tmp 数组的长度（与 a 相同），或使用</span></span><br><span class="line">                       <span class="comment">// vector；先将合并的结果放在 tmp 里，再返回到数组 a</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="type">size_t</span> seg = <span class="number">1</span>; seg &lt; n; seg &lt;&lt;= <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">size_t</span> left1 = <span class="number">0</span>; left1 &lt; n - seg;</span><br><span class="line">         left1 += seg + seg) &#123;  <span class="comment">// n - seg: 如果最后只有一个段就不用合并</span></span><br><span class="line">      <span class="type">size_t</span> right1 = left1 + seg;</span><br><span class="line">      <span class="type">size_t</span> left2 = right1;</span><br><span class="line">      <span class="type">size_t</span> right2 = std::<span class="built_in">min</span>(left2 + seg, n);  <span class="comment">// &lt;!&gt; 注意最后一个段的边界</span></span><br><span class="line">      <span class="built_in">merge</span>(a + left1, a + right1, a + left2, a + right2,</span><br><span class="line">            tmp + left1);  <span class="comment">// pointer-style merge</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="type">size_t</span> i = left1; i &lt; right2; ++i) a[i] = tmp[i];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/2yb4cj9w.png"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023-12-06竞赛笔记</title>
      <link href="//post/2023-12-06%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html"/>
      <url>//post/2023-12-06%E7%AB%9E%E8%B5%9B%E7%AC%94%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="2023-12-6"><a href="#2023-12-6" class="headerlink" title="2023&#x2F;12&#x2F;6"></a>2023&#x2F;12&#x2F;6</h1><p><a href="https://www.luogu.com.cn/paste/s6i2w06i">GESP C++等级测试四级2023 年 9 ⽉</a><br><img src="https://cdn.luogu.com.cn/upload/image_hosting/rlj4hv8h.png"></p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/y21b3nr1.png"></p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/aqxedlgz.png"></p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/k8iaafes.png"></p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023.11.21初一周赛总结</title>
      <link href="//post/2023-11-21%E5%88%9D%E4%B8%80%E5%91%A8%E8%B5%9B%E6%80%BB%E7%BB%93.html"/>
      <url>//post/2023-11-21%E5%88%9D%E4%B8%80%E5%91%A8%E8%B5%9B%E6%80%BB%E7%BB%93.html</url>
      
        <content type="html"><![CDATA[<h1 id="2023-11-21初一欢乐周赛"><a href="#2023-11-21初一欢乐周赛" class="headerlink" title="2023.11.21初一欢乐周赛"></a>2023.11.21初一欢乐周赛</h1><p><strong>总叙</strong>:思路差不多懂，但就是不会写</p><hr><h3 id="P1165-日志分析"><a href="#P1165-日志分析" class="headerlink" title="P1165 日志分析"></a>P1165 日志分析</h3><p><strong>题目链接</strong>：<a href="https://www.luogu.com.cn/problem/P1165">P1165</a></p><p><strong>考点</strong>：模拟，线性数据结构，栈</p><p><strong>难点</strong>：我们设a[i]为栈中从下到上的i个元素中的最大值，当我们加入一个新元素x时，t++，a[t]&#x3D;max(a[t-1],x)。那么在出栈时只要输出a[t-1]，在查找时只要输出a[t]</p><p><strong>比赛时自己的思路</strong>：插入、删除、查询栈</p><p><strong>结果</strong>：$ {\color{red} Unaccept}$</p><p><strong>正确代码</strong>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> s[<span class="number">20000000</span>],a[<span class="number">20000000</span>],top,k;</span><br><span class="line"><span class="type">int</span> n,t,x;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">cx</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(top==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;a[k]&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;t;</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>)<span class="comment">//入栈</span></span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;x;</span><br><span class="line">s[++top]=x;</span><br><span class="line"><span class="keyword">if</span>(x&gt;a[k])<span class="comment">//a是辅助站，保存最大值 </span></span><br><span class="line">a[k+<span class="number">1</span>]=x;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">a[k+<span class="number">1</span>]=a[k];<span class="comment">//当前最大值入栈 </span></span><br><span class="line">k++; </span><br><span class="line"> &#125; </span><br><span class="line"> <span class="keyword">if</span>(t==<span class="number">1</span>)<span class="comment">//出栈 </span></span><br><span class="line"> &#123;</span><br><span class="line"><span class="keyword">if</span>(top!=<span class="number">0</span> &amp;&amp; k!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">top--,k--;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">2</span>) <span class="built_in">cx</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><hr><h3 id="P4387-【深基15-习9】验证栈序列"><a href="#P4387-【深基15-习9】验证栈序列" class="headerlink" title="P4387 【深基15.习9】验证栈序列"></a>P4387 【深基15.习9】验证栈序列</h3><p><strong>题目链接</strong>：<a href="https://www.luogu.com.cn/problem/P4387">P4387</a></p><p><strong>考点</strong>：栈</p><p><strong>难点</strong>：入栈（push（））、是否栈空（empty（））、访问栈顶（top（））、出栈（pop（））</p><p><strong>比赛时自己的思路</strong>：想不明白</p><p><strong>结果</strong>：$ {\color{red} Unaccept}$</p><h2 id="正确代码："><a href="#正确代码：" class="headerlink" title="正确代码："></a><strong>正确代码</strong>：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> q,n,a[<span class="number">100010</span>],b[<span class="number">100010</span>];</span><br><span class="line">stack&lt;<span class="type">int</span>&gt; s;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;q;</span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line"><span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span> b);</span><br><span class="line"><span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;a[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) cin&gt;&gt;b[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">s.<span class="built_in">push</span>(a[i]);</span><br><span class="line"><span class="keyword">while</span>(s.<span class="built_in">top</span>()==b[t])</span><br><span class="line">&#123;</span><br><span class="line">s.<span class="built_in">pop</span>();</span><br><span class="line">t++;</span><br><span class="line"><span class="keyword">if</span>(s.<span class="built_in">empty</span>()) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!s.<span class="built_in">empty</span>()) cout&lt;&lt;<span class="string">&quot;No&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;Yes&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">while</span>(!s.<span class="built_in">empty</span>()) s.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></h2><h3 id="P9748-CSP-J-2023-小苹果"><a href="#P9748-CSP-J-2023-小苹果" class="headerlink" title="P9748 [CSP-J 2023] 小苹果"></a>P9748 [CSP-J 2023] 小苹果</h3><p><strong>题目链接</strong>：<a href="https://www.luogu.com.cn/problem/P9748">P9748</a></p><p><strong>考点</strong>：栈，O2</p><p><strong>难点</strong>：每次拿去  $n&#x2F;3$ 个苹果，而如果此时 $n % 3$  刚好为一，则这一天也可以拿走第 $n$ 个苹果</p><p><strong>比赛时自己的思路</strong>：栈逐一判断苹果树，记录</p><p><strong>结果</strong>：$ {\color{red} Unaccept}$</p><p><strong>正确代码</strong>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n,t=<span class="number">0</span>,s=<span class="number">1</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">while</span>(n&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n&lt;<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(!ans&amp;&amp;n%<span class="number">3</span>==<span class="number">1</span>) ans=s;</span><br><span class="line">t=<span class="built_in">ceil</span>(<span class="number">1.0</span>*n/<span class="number">3</span>);</span><br><span class="line">n=n-t;</span><br><span class="line">s++;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;s<span class="number">-1</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>对于我来说挺难的，还要加倍努力</p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
            <tag> 周赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023.10.27初一编程马拉松赛赛后总结</title>
      <link href="//post/2023-10-27%E5%88%9D%E4%B8%80%E7%BC%96%E7%A8%8B%E9%A9%AC%E6%8B%89%E6%9D%BE%E8%B5%9B%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93.html"/>
      <url>//post/2023-10-27%E5%88%9D%E4%B8%80%E7%BC%96%E7%A8%8B%E9%A9%AC%E6%8B%89%E6%9D%BE%E8%B5%9B%E8%B5%9B%E5%90%8E%E6%80%BB%E7%BB%93.html</url>
      
        <content type="html"><![CDATA[<p>总分：<strong>273</strong></p><p>总叙：有亿点难（太菜了），发挥的不好，学过的知识点运用不好</p><hr><h3 id="P1003-NOIP2011-提高组-铺地毯"><a href="#P1003-NOIP2011-提高组-铺地毯" class="headerlink" title="P1003 [NOIP2011 提高组] 铺地毯"></a>P1003 [NOIP2011 提高组] 铺地毯</h3><p><strong>题目链接</strong>：<a href="https://www.luogu.com.cn/problem/P1003?contestId=141914">P1003</a></p><p><strong>考点</strong>：(<strong>模拟题</strong>）从后往前枚举地毯（因为后覆盖的地毯在上面，而题目正好要求最上面的地毯），如果有一个地毯满足条件（满足什么条件在下面讲解）就直接输出，并退出。如果没有地毯满足条件，就输出-1</p><p><strong>难点</strong>：<strong>模拟，枚举</strong></p><p><strong>比赛时自己的思路</strong>：先输入数据，找地毯覆盖的位置，累加cnt</p><p><strong>情况</strong>：$\mathbf\color{red} WA$</p><p>正确解法：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> a[<span class="number">114514</span>],b[<span class="number">114514</span>],x[<span class="number">114514</span>],y[<span class="number">114514</span>],n,sx,sy,ans=<span class="number">-1</span>;</span><br><span class="line"><span class="comment">//初始化ans为-1 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a[i]&gt;&gt;b[i]&gt;&gt;x[i]&gt;&gt;y[i];</span><br><span class="line">&#125;</span><br><span class="line">cin&gt;&gt;sx&gt;&gt;sy;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&lt;=sx&amp;&amp;b[i]&lt;=sy&amp;&amp;x[i]+a[i]&gt;=sx&amp;&amp;y[i]+b[i]&gt;=sy)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//判断是否覆盖所求的点</span></span><br><span class="line">ans=i; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="P1031-NOIP2002-提高组-均分纸牌"><a href="#P1031-NOIP2002-提高组-均分纸牌" class="headerlink" title="P1031 [NOIP2002 提高组] 均分纸牌"></a>P1031 [NOIP2002 提高组] 均分纸牌</h3><p><strong>题目链接</strong>：<a href="https://www.luogu.com.cn/problem/P1031?contestId=141914">P1031</a></p><p><strong>考点</strong>：<strong>（模拟，贪心）</strong> 每堆牌只能移到相邻的堆，一堆堆处理，且只考虑后一堆</p><p><strong>难点</strong>：贪心算法</p><p><strong>比赛时自己的思路</strong>：平分每一堆得纸牌</p><p><strong>结果</strong>：$\mathbf\color{red} WA$</p><p><strong>正确解法</strong>:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i,n,m) for(int i=n;i&lt;=m;i++)<span class="comment">//宏定义节省代码长度</span></span></span><br><span class="line"><span class="type">int</span> n,a[<span class="number">110</span>],c[<span class="number">110</span>],p,ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);<span class="built_in">FOR</span>(i,<span class="number">1</span>,n) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]); <span class="comment">//读入</span></span><br><span class="line">    <span class="built_in">FOR</span>(i,<span class="number">1</span>,n) c[i]=c[i<span class="number">-1</span>]+a[i];  <span class="comment">//求前缀和</span></span><br><span class="line">    p=c[n]/n; <span class="comment">//求平均数</span></span><br><span class="line">    <span class="built_in">FOR</span>(i,<span class="number">1</span>,n<span class="number">-1</span>) <span class="keyword">if</span>(p*i!=c[i]) ans++;</span><br><span class="line">    <span class="comment">//当此时牌堆1-i总牌数!=i*总平均数，需要移动一次</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="P1055-NOIP2008-普及组-ISBN-号码"><a href="#P1055-NOIP2008-普及组-ISBN-号码" class="headerlink" title="P1055 [NOIP2008 普及组] ISBN 号码"></a>P1055 [NOIP2008 普及组] ISBN 号码</h3><p><strong>题目链接</strong>：<a href="https://www.luogu.com.cn/problem/P1055?contestId=141914">P1055</a></p><p><strong>考点</strong>：<strong>（模拟，字符串）</strong> 首先，可以把ISBN号码分割成三个int和一个char，用scanf输入，最后一位是char型是因为它可能是‘X’，然后将X换成10，依次分解，判断</p><p><strong>难点</strong>：字符串</p><p><strong>比赛时自己的思路</strong>：输入，分别为 <strong>int-int-int-char</strong>(char防止输入X,X换成10),分解每一个数的各个数位的数，分别乘起来，最后mod11,判断是否为正确结果，对输出“Yes”，不对就输出新的结果</p><p><strong>结果</strong>：$\mathbf\color{red} WA$</p><p><strong>正确结果</strong>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a,b,c,d,s=<span class="number">0</span>,m;</span><br><span class="line"><span class="type">char</span> d1;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d-%d-%d-%c&quot;</span>,&amp;a,&amp;b,&amp;c,&amp;d1);</span><br><span class="line"><span class="keyword">if</span>(d1==<span class="string">&#x27;X&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">d=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">d=d1<span class="number">-48</span>;</span><br><span class="line">&#125;</span><br><span class="line">m=(a*<span class="number">1000</span>+b)*<span class="number">100000</span>+c;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">9</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">s+=m%<span class="number">10</span>*(<span class="number">9</span>-i+<span class="number">1</span>);</span><br><span class="line"><span class="comment">//s%=11;</span></span><br><span class="line">m/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">s%=<span class="number">11</span>;</span><br><span class="line"><span class="keyword">if</span>(s==d)</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;Right&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d-%d-%d-&quot;</span>,a,b,c);</span><br><span class="line"><span class="keyword">if</span> (s==<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&#x27;X&#x27;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="P1102-A-B-数对"><a href="#P1102-A-B-数对" class="headerlink" title="P1102 A-B 数对"></a>P1102 A-B 数对</h3><p><strong>题目链接</strong>：<a href="https://www.luogu.com.cn/problem/P1102?contestId=141914">P1102</a></p><p><strong>考点</strong>：重复是算的， A-B&#x3D;C 那么 A-C&#x3D;B 所以就把A的个数累加，然后把A减去C就可以了，B的值的和就是答案。 当然MLE是可能得。所以绕一下做就行了。</p><p><strong>难点</strong>：模拟；数学；二分；排序；哈希, hash；双指针,two-pointer</p><p><strong>比赛时自己的思路</strong>：遍历数对，一个个数相减然后判断（当时也想着可能会RE或TLE）</p><p><strong>结果</strong>：WA(76pts)</p><p><strong>正确解法</strong>：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> n,k,a[<span class="number">200001</span>],ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">fun</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> l=<span class="number">0</span>,r=n+<span class="number">1</span>,mid;</span><br><span class="line"><span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)</span><br><span class="line">&#123;</span><br><span class="line">mid=(l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(a[mid]&lt;=x)</span><br><span class="line">&#123;</span><br><span class="line">l=mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">r=mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">far</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> l=<span class="number">0</span>,r=n+<span class="number">1</span>,mid;</span><br><span class="line"><span class="keyword">while</span>(l+<span class="number">1</span>&lt;r)</span><br><span class="line">&#123;</span><br><span class="line">mid=(l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(a[mid]&lt;x)</span><br><span class="line">&#123;</span><br><span class="line">l=mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">r=mid;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cin&gt;&gt;a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n); </span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">ans+=<span class="built_in">fun</span>(a[i]+k)-<span class="built_in">far</span>(a[i]+k);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;ans;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><p>考的不好，再努力</p>]]></content>
      
      
      <categories>
          
          <category> 竞赛笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛 </tag>
            
            <tag> C++ </tag>
            
            <tag> 周赛 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
